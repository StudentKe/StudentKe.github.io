<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IOS/Objective-C开发学习笔记（一）</title>
      <link href="/2019/01/28/IOS-Objective-C%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/01/28/IOS-Objective-C%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>打算入门IOS开发，在ReactNative，Swift和Objective-C之间抉择之后，选用OC作为开发的工具。把学习笔记整理发布，以便随时复习。<br><a id="more"></a></p><h2 id="OC-Hello-World"><a href="#OC-Hello-World" class="headerlink" title="OC Hello World"></a>OC Hello World</h2><blockquote><p>一个OC的程序基本有以下部分</p><ul><li>预处理</li><li>接口</li><li>实现</li><li>方法</li><li>变量</li><li>表达式</li><li>注释</li></ul></blockquote><hr><p>OC的简单代码示例（由XCode自动生成）：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[]) &#123;</span><br><span class="line">    <span class="keyword">@autoreleasepool</span> &#123;</span><br><span class="line">        <span class="comment">// insert code here...</span></span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Hello, World!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>控制台输出:<br><code>2019-01-27 23:27:13.818927+0800 OCStudy[1444:3995540] Hello, World!</code></p><p>现在稍微加一点东西：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">myClass</span> : <span class="title">NSObject</span></span></span><br><span class="line">- (<span class="keyword">void</span>)myFunction;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">myClass</span></span></span><br><span class="line">- (<span class="keyword">void</span>)myFunction&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"hello world!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[]) &#123;</span><br><span class="line">    <span class="keyword">@autoreleasepool</span> &#123;</span><br><span class="line">        myClass *_myClass = [[myClass alloc] init];</span><br><span class="line">        [_myClass myFunction];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>打印输出仍然是：</p><p><code>2019-01-27 23:27:13.818927+0800 OCStudy[1444:3995540] Hello, World!</code></p><p>关于程序的几个解释：</p><ul><li><code>#import &lt;Foundation/Foundation.h&gt;</code>是一个预处理命令，它告诉<code>Objective-C</code>语言编译器去实际编译之前包含<code>Foundation.h</code>文件</li><li><code>@interface myClass:NSObject</code> 显示了如何创建一个类。它继<code>承NSObject</code>，这是所有对象的基类。</li><li><code>- (void)myFunction</code>声明一个方法。</li><li><code>@end</code>实现结束</li><li><code>NSLog();</code>在控制台打印信息。</li><li><code>myClass *_myClass = [[myClass alloc] init];</code>实例化<code>myClass</code>类，获得一个<code>_myClass</code>对象,<strong><strong>注意:这里不能写作：<code>myClass *myClass = [[myClass alloc] init];</code></strong></strong></li><li><code>[_myClass myFunction]</code>调用<code>_myClass</code> 对象的<code>myFunction</code>方法。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Objective-C </tag>
            
            <tag> IOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux/osx-把rm命令改为废纸篓</title>
      <link href="/2019/01/26/linux-osx-%E6%8A%8Arm%E5%91%BD%E4%BB%A4%E6%94%B9%E4%B8%BA%E5%BA%9F%E7%BA%B8%E7%AF%93/"/>
      <url>/2019/01/26/linux-osx-%E6%8A%8Arm%E5%91%BD%E4%BB%A4%E6%94%B9%E4%B8%BA%E5%BA%9F%E7%BA%B8%E7%AF%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>linux的设计哲学假定了用户知道自己干了什么并为自己的行为负责(其实并不知道)，甚至是 <code>sudo rm -rf /</code>,当然我一般是不会愚蠢到执行这个指令，然而昨天还是误删了一大堆重要的东西（还没有备份到时间机器。。。），为了纪念一早上恢复的血泪史和避免今后出现这种问题。决定将rm命令改为移动到回收站.</p></blockquote><a id="more"></a><p>有了这个想法后发现网上已经有了非常成熟的作品了，安装下来试用一番：</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>wget --no-check-certificate https://raw.githubusercontent.com/LaiJingli/rmtrash/master/rmtrash.sh</code><br><code>mv rmtrash.sh /bin/</code><br><code>chmod +x /bin/rmtrash.sh</code></p><h3 id="如果仅对单个用户启用回收站，只需第一次执行如下命令即可："><a href="#如果仅对单个用户启用回收站，只需第一次执行如下命令即可：" class="headerlink" title="如果仅对单个用户启用回收站，只需第一次执行如下命令即可："></a>如果仅对单个用户启用回收站，只需第一次执行如下命令即可：</h3><p><code>/bin/rmtrash.sh</code></p><h3 id="如果想对全局所有用户启用回收站，需要修改bashrc全局配置文件后即可："><a href="#如果想对全局所有用户启用回收站，需要修改bashrc全局配置文件后即可：" class="headerlink" title="如果想对全局所有用户启用回收站，需要修改bashrc全局配置文件后即可："></a>如果想对全局所有用户启用回收站，需要修改bashrc全局配置文件后即可：</h3><p><code>echo &quot;alias rm=/bin/rmtrash.sh&quot; &gt;&gt;/etc/bashrc</code></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>rm -h</code><br><code>Usage1: rmtrash.sh file1 [file2] [dir3] [....] delete the files or dirs,and mv them to the rmtrash recycle bin</code><br><code>Usage2: rm file1 [file2] [dir3] [....] delete the files or dirs,and mv them to the rmtrash recycle bin</code><br><code>rm is alias to rmtrash.sh.</code></p><h3 id="options"><a href="#options" class="headerlink" title="options:"></a>options:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-f mv one or more files to the rmtrash recycle bin</span><br><span class="line">-r mv one or more files to the rmtrash recycle bin</span><br><span class="line">-fr mv one or more files to the rmtrash recycle bin</span><br><span class="line">-rf mv one or more files to the rmtrash recycle bin</span><br><span class="line">-R Restore selected files to the originalpath from rmtrash recycle bin</span><br><span class="line">-l list the contens of rmtrash recycle bin</span><br><span class="line">-i show detailed log of the deleted file history</span><br><span class="line">-d delete one or more files by user's input file name from the trash</span><br><span class="line">-e empty the rmtrash recycle bin</span><br><span class="line">-h display this help menu</span><br></pre></td></tr></table></figure><h3 id="如果有问题，执行以下2条命令排查-或者退出重新登录系统"><a href="#如果有问题，执行以下2条命令排查-或者退出重新登录系统" class="headerlink" title="如果有问题，执行以下2条命令排查,或者退出重新登录系统"></a>如果有问题，执行以下2条命令排查,或者退出重新登录系统</h3><p><code>source ~/.bashrc</code><br><code>alias |grep rm</code></p><h2 id="如果需要彻底删除文件"><a href="#如果需要彻底删除文件" class="headerlink" title="如果需要彻底删除文件"></a>如果需要彻底删除文件</h2><ol><li><h1 id="rm-e-清空回收站"><a href="#rm-e-清空回收站" class="headerlink" title="rm -e 清空回收站"></a>rm -e 清空回收站</h1></li><li><h1 id="bin-rm-file-直接删除文件而不经过回收站"><a href="#bin-rm-file-直接删除文件而不经过回收站" class="headerlink" title="/bin/rm file 直接删除文件而不经过回收站"></a>/bin/rm file 直接删除文件而不经过回收站</h1></li></ol><h2 id="适用系统linux、mac-osx"><a href="#适用系统linux、mac-osx" class="headerlink" title="适用系统linux、mac osx"></a>适用系统linux、mac osx</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> OS X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吴恩达机器学习-多变量线性回归</title>
      <link href="/2019/01/26/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%A4%9A%E5%8F%98%E9%87%8F%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
      <url>/2019/01/26/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%A4%9A%E5%8F%98%E9%87%8F%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h2 id="多特征值"><a href="#多特征值" class="headerlink" title="多特征值"></a>多特征值</h2><h3 id="表示方法"><a href="#表示方法" class="headerlink" title="表示方法"></a>表示方法</h3><a id="more"></a><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpaf3fj30u60hkmzf.jpg" alt=""></p><ul><li>n <em>特征值的数目</em></li><li>m <em>表示训练集样本数</em></li><li>x_1,x_2…x_n <em>表示n个特征值</em></li><li>y <em>输出变量</em>。</li></ul><ul><li><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp0zttj302a01kq2t.jpg" alt=""> 表示第i个特征向量，他是一个<strong><strong>n</strong></strong>维度向量。</li><li><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxoxmfbj302402a746.jpg" alt="">第i个向量的第j个特征值<blockquote><p>eg:<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxoutsvj30d009k3yw.jpg" alt=""></p></blockquote></li></ul><h3 id="假设形式"><a href="#假设形式" class="headerlink" title="假设形式"></a>假设形式</h3><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxoux62j30wc06kaaf.jpg" alt=""></p><h4 id="例"><a href="#例" class="headerlink" title="例"></a>例</h4><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp3qpsj31640a8q4e.jpg" alt=""><br>某房子的价格 = 基本价格80k+x1平方米<em>0.1k+有x2层</em>0.01k+有x3卧室<em>3k-使用年数</em>2k</p><h4 id="等价形式"><a href="#等价形式" class="headerlink" title="等价形式"></a>等价形式</h4><p>为了方便表示，我们增加一个x0，定义为1，假设此时变成了:</p><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp9n1lj30rm0fk404.jpg" alt=""><br>这就是多元线性回归。</p><h2 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h2><ul><li>这里不把θ(0-n)看做是n+1个独立的变量，而是考虑看做n+1维的θ向量。</li><li>梯度下降<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp2rfbj30x209w3zb.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp7i9gj31h00sy782.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxovvcvj30l40bamy4.jpg" alt=""></li></ul><h2 id="多元梯度下降算法演练"><a href="#多元梯度下降算法演练" class="headerlink" title="多元梯度下降算法演练"></a>多元梯度下降算法演练</h2><h3 id="特征缩放（不需要过于精确，目的只是让梯度下降更快一些）"><a href="#特征缩放（不需要过于精确，目的只是让梯度下降更快一些）" class="headerlink" title="特征缩放（不需要过于精确，目的只是让梯度下降更快一些）"></a>特征缩放（不需要过于精确，目的只是让梯度下降更快一些）</h3><ul><li>当特征值的取值范围相差过多时，代价函数的等值曲线会非常的扁，会导致梯度下降非常慢。</li></ul><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp0c67j30lk0kc413.jpg" alt=""></p><ul><li><p>此时需要对特征值进行放缩处理，使得特征值的取值范围更加接近。<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxovvoij30mm0kkabq.jpg" alt=""></p></li><li><p>一般的，尽量让特征值的取值范围都在(-1,1)之间。（如果不在，但区间接近，问题也不是很大。只要不是过分的大或过分的小。）</p></li></ul><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp5oczj318m0nwtb6.jpg" alt=""></p><p>这些都是可以接受的范围</p><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp0llrj30f609c0sy.jpg" alt=""></p><ul><li>除了除以取值范围之外，我们还可以进行均值归一化处理。<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp8r6jj30pm0bk3zr.jpg" alt=""></li><li>具体做法：减去平均值再除以取值范围<ul><li>例子：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpei8nj315m0f0jua.jpg" alt=""></li></ul></li></ul><h3 id="学习率α"><a href="#学习率α" class="headerlink" title="学习率α"></a>学习率α</h3><ul><li>我们可以画出J关于迭代次数的函数图像，如果梯度下降算法正常进行，那么每次迭代之后的J的值都应该变小。如果在某一段区间内，函数的图像已经变得非常平缓了，那么说明此时梯度下降算法差不多已经收敛了。<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpa2lgj30sy0ia0um.jpg" alt=""></li><li><p>这样的函数曲线也可以帮助我们判断梯度下降算法是否正常工作，比如，学习率α过大时：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp6fz8j30z20i6abv.jpg" alt=""></p></li><li><p>尝试一系列的α：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpbh0ij30yq07s754.jpg" alt=""></p></li></ul><h3 id="可供选择的特征以及如何得到不同的学习算法以及多特征回归"><a href="#可供选择的特征以及如何得到不同的学习算法以及多特征回归" class="headerlink" title="可供选择的特征以及如何得到不同的学习算法以及多特征回归"></a>可供选择的特征以及如何得到不同的学习算法以及多特征回归</h3><ul><li>同一个问题可以有多种特征的选择方法<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpakngj312i0jswgy.jpg" alt=""></li></ul><h4 id="多项式回归"><a href="#多项式回归" class="headerlink" title="多项式回归"></a>多项式回归</h4><ul><li>如何更好的拟合<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp79kqj316i0j8tay.jpg" alt=""></li></ul><p><strong><strong>如果采取上面的方法，那么放缩法就显得尤为重要！</strong></strong></p><ul><li>选取特征的方法有很多<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpcxikj312w0jsgnc.jpg" alt=""></li></ul><h4 id="正规方程（不需要放缩）"><a href="#正规方程（不需要放缩）" class="headerlink" title="正规方程（不需要放缩）"></a>正规方程（不需要放缩）</h4><blockquote><p>对于某些线性回归问题，有更好的方法来求得参数θ的最优值。</p></blockquote><p>正规方程区别于迭代的方法求得最优θ，它可以一步求得最优的θ。</p><p>引例：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp11iej319y0ocn0p.jpg" alt=""></p><p>实际上，我们不对向量θ中每一个都求偏导，这样的话过于冗杂。而是用一种等价的方法。</p><ul><li>如何实现正规方程法？<br>给定一个训练集，我们加一列x0 = (1,1,1,…1) 然后构建矩阵X和向量y。使得代价函数最小的θ即可求出。</li></ul><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpcla4j31ag0pgn1p.jpg" alt=""></p><blockquote><p>证明：<br>设假设函<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxov5xpj30gw02edg4.jpg" alt=""><br>即<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxpbpowj304w01o3yh.jpg" alt=""></p></blockquote><p>在拟合成功时，输出函数y约等于<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp2v69j302k01s747.jpg" alt=""></p><p>故<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp81m2j304c02amx3.jpg" alt=""><br>在X为方阵的时候，才可逆，即就是：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxoy20aj306a01uaa2.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp1wgkj308k02874c.jpg" alt=""></p><ul><li>X (设计矩阵)<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp722cj319y0nytcp.jpg" alt=""></li></ul><h4 id="何时使用正规方程和梯度下降？"><a href="#何时使用正规方程和梯度下降？" class="headerlink" title="何时使用正规方程和梯度下降？"></a>何时使用正规方程和梯度下降？</h4><p>梯度下降和正规方程的优缺点对比：<br>只要特征的数量不是很大 (&lt;10000)都可以采用正规方程法</p><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjvxp4u4rj31e20nqtdn.jpg" alt=""></p><h4 id="正规方程不可逆情况下的解决办法"><a href="#正规方程不可逆情况下的解决办法" class="headerlink" title="正规方程不可逆情况下的解决办法"></a>正规方程不可逆情况下的解决办法</h4><ul><li>检查是否有多余（线性相关）特征（线代知识）</li><li>如果特征过多的话，试着删除一些特征(不影响的情况下)，或者正则化（later）。 </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 多变量线性回归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吴恩达机器学习-单变量线性回归</title>
      <link href="/2019/01/26/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%8D%95%E5%8F%98%E9%87%8F%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
      <url>/2019/01/26/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%8D%95%E5%8F%98%E9%87%8F%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h3 id="符号定义"><a href="#符号定义" class="headerlink" title="符号定义"></a>符号定义</h3><ul><li>m <em>训练集样本的数量</em></li><li>x <em>输入的特征值</em></li><li>y <em>输出的变量</em></li><li>(x,y) <em>一个训练样本</em></li><li>(x(i), y(i)) <em>第i个训练样本</em><a id="more"></a><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjulzdpb9j30u80e8gmu.jpg" alt=""></li></ul><blockquote><p>我们通常使用h（hypothesis）表示一个函数。在预测房价的例子中，x对应房屋面积，y对应房屋价格，根据监督学习我们可以构建一个函数表达式h：<br>　　hθ(x) = θ0 + θ1x<br>我们将这种可以构建出线性函数的模型称为线性回归模型。在这里只有一个特征变量x，因此我们称这种单一变量模型为单变量线性回归。</p></blockquote><h3 id="代价函数"><a href="#代价函数" class="headerlink" title="代价函数"></a>代价函数</h3><h4 id="代价函数的数学定义"><a href="#代价函数的数学定义" class="headerlink" title="代价函数的数学定义"></a>代价函数的数学定义</h4><p>现在我们要做的就是确<br>定θ0和θ1的值，使得h(x)的结果和y相差尽量小，<br>算做平方差尽量小,即让<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjumi4z2xj30cs03kaa5.jpg" alt="">量小。</p><hr><p>定义代价函数为<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjun1bzwcj30qo05mt94.jpg" alt="">（前面的求和等是为了让表达式更清晰）</p><hr><p>吴恩达视频笔记：</p><h2 id="IMAGE"><a href="#IMAGE" class="headerlink" title="![IMAGE]"></a>![IMAGE]<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjunjxzjqj31eu0ukq8e.jpg" alt=""></h2><h4 id="代价函数是用来做什么的以及如何使用"><a href="#代价函数是用来做什么的以及如何使用" class="headerlink" title="代价函数是用来做什么的以及如何使用"></a>代价函数是用来做什么的以及如何使用</h4><ul><li>用简单的代价函数来理解其概念<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjunscf8uj30eg0h6jsb.jpg" alt=""></li></ul><p>当θ=0时，假设函数h(x)和代价函数j(θ1)的情况如图：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuoimvoej30ve0ksmzr.jpg" alt=""><br>当θ=0.5时，<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuoz3souj30wu0l8wgp.jpg" alt=""><br>当θ=0时，<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjupgfanjj30v80jc75x.jpg" alt=""></p><p>….</p><p>不同的θ1对应不同的h(x)曲线，对应不同的j(θ)值，在选取出最小的j(θ)，就是线性回归的目标函数。（此例中，θ=1）也就是可以完美的拟合数据。</p><ul><li>进一步理解代价函数（保留两个θ）<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjups43crj30i80hmabl.jpg" alt=""></li></ul><p>此时，代价函数图像变为：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjur4fh3bj30u80iqtax.jpg" alt=""><br>其对应的高度即为goal,可用等高线图表表示：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuriquc9j30ws0fs76z.jpg" alt=""></p><hr><h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>![IMAGE]<img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjus6718aj30uk0em40r.jpg" alt=""><br>给定初始化θ0=0，θ1=0，不停地改变其值，直到求出最小值J或者局部最小值J。</p><h4 id="梯度下降法工作原理"><a href="#梯度下降法工作原理" class="headerlink" title="梯度下降法工作原理"></a>梯度下降法工作原理</h4><p>goal：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjusmk36kj30t20giwgd.jpg" alt=""><br>从某一点出发开始，向四周下降最快的方向迈出一小步。逐步收敛至最低点：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjusvvmhtj30wm0f8mz6.jpg" alt=""><br>如此重复，每次都到达局部最优。<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuugz9f5j30sy0gcdht.jpg" alt=""></p><h4 id="梯度下降法的数学原理"><a href="#梯度下降法的数学原理" class="headerlink" title="梯度下降法的数学原理"></a>梯度下降法的数学原理</h4><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuv1zvq8j30t20fgdhb.jpg" alt=""></p><h5 id="符号定义-1"><a href="#符号定义-1" class="headerlink" title="符号定义"></a>符号定义</h5><ul><li><strong>*</strong>:=<strong>*</strong>  _赋值_</li><li><strong>*</strong>=<strong>*</strong>  <em>断言,逻辑运算</em></li><li><strong>*</strong>α<strong>*</strong> <em>学习率，步长，如果α很大，那么梯度下降的就很迅速</em></li><li><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuzplhs7j305y02u3yl.jpg" alt=""> <em>导数项，暂不讨论</em></li></ul><h5 id="同步更新-θ0和θ1"><a href="#同步更新-θ0和θ1" class="headerlink" title="*!同步更新 θ0和θ1*"></a><strong>*</strong>!同步更新 θ0和θ1<strong>*</strong></h5><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv09yvrnj30vg06u0tx.jpg" alt=""></p><h4 id="深入理解梯度下降算法工作原理"><a href="#深入理解梯度下降算法工作原理" class="headerlink" title="深入理解梯度下降算法工作原理"></a>深入理解梯度下降算法工作原理</h4><h5 id="简单例子"><a href="#简单例子" class="headerlink" title="简单例子"></a>简单例子</h5><ul><li>导数项<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv0nldp1j314w0pmn0l.jpg" alt=""><br>学习速率<em>导数 === 学习速率</em>斜率</li></ul><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv1lrz2jj30cu09y3yy.jpg" alt=""></p><p>θ经过此次变化后，总向着正确的方向移动了一小点（无论是增加还是减少），也就是更接近最小值。</p><ul><li><p>学习速率α</p><ul><li>步长太小，移动距离很小，需要很多步才能达到全局最优。</li><li>步长太大，移动距离太大，很可能导致无法收敛。</li></ul></li></ul><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv20xh5sj316e0nedje.jpg" alt=""></p><h5 id="解出局部最低点时？"><a href="#解出局部最低点时？" class="headerlink" title="解出局部最低点时？"></a>解出局部最低点时？</h5><p>如果已经处在了最优点（最低点），此时导数项为0，θ不进行更新。（这也是我们所想要的）</p><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv2ap72qj314q0m4djx.jpg" alt=""></p><p>在越接近局部最优时，导数越来越接近0（曲线越来越平缓），即使α不变，也会逐步找到局部最优解。</p><h3 id="线性回归的梯度下降"><a href="#线性回归的梯度下降" class="headerlink" title="线性回归的梯度下降"></a>线性回归的梯度下降</h3><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv2y8ufyj318g0iiwh2.jpg" alt=""><br>求导：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv3tycqoj315g0jkdj7.jpg" alt=""></p><p><img src="quiver-image-url/8601D7B744201921C6553C44FD41F302.jpg =523x278" alt="IMAGE"></p><h4 id="如何实现？"><a href="#如何实现？" class="headerlink" title="如何实现？"></a>如何实现？</h4><p>问题：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv47z7moj30t20fgdhb.jpg" alt=""></p><p>反复梯度下降：</p><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv4mj385j314s0kmae3.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv50sw86j31420ii0wo.jpg" alt=""></p><p>越来越符合数据：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv5d9go5j314a0jm789.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv5pgbrhj314s0jwtcq.jpg" alt=""></p><hr><p>至此，就是batch梯度下降算法，在每一次梯度下降，都会遍历训练集的样本。<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjv6bpto4j30zw0goac7.jpg" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 单变量线性回归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吴恩达机器学习-绪论</title>
      <link href="/2019/01/26/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E7%BB%AA%E8%AE%BA/"/>
      <url>/2019/01/26/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E7%BB%AA%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是机器学习？"><a href="#什么是机器学习？" class="headerlink" title="什么是机器学习？"></a>什么是机器学习？</h2><blockquote><p>在没有明确设置的情况下，使计算机具有学习能力的研究领域。<br>or 计算机程序从经验E中学习，解决某一任务T，进行某一性能度量P，通过P测定在T上的表现因经验E提高。<br><a id="more"></a></p></blockquote><h2 id="不同类型的学习算法"><a href="#不同类型的学习算法" class="headerlink" title="不同类型的学习算法"></a>不同类型的学习算法</h2><ul><li>监督学习<ul><li>我们教给计算机学习某件事</li></ul></li><li>无监督学习<ul><li>让计算机自己学习</li></ul></li><li>等</li></ul><h3 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h3><blockquote><p>给算法一个数据集，其中包含了正确答案，算法的目的是给出更多的正确答案。</p><ul><li>回归问题： 连续</li><li>分类问题： 离散<br>实质上就是对数据集中的每个样本做算法预测，并得出正确答案.</li></ul></blockquote><h3 id="无监督学习"><a href="#无监督学习" class="headerlink" title="无监督学习"></a>无监督学习</h3><blockquote><p>对于给定数据集，算法可判定数据集包含的不同的簇。</p><ul><li>聚类算法</li><li>鸡尾酒会问题</li></ul></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码共享</title>
      <link href="/2019/01/26/%E4%BB%A3%E7%A0%81%E5%85%B1%E4%BA%AB/"/>
      <url>/2019/01/26/%E4%BB%A3%E7%A0%81%E5%85%B1%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><ul><li>主要是和研友一起讨论一些程序问题，发来发去太麻烦，而且windows和osx的编码集还不一样，总之，，诸多问题。</li><li>便萌生了写一个大家都可以在线看代码的网站。</li><li>主要功能就是预览代码。其次可以上传自己的代码</li><li><p>上传文件是一个非常危险的行为，尽管如此，我还是没有做任何过滤措施，这是非常危险的行为（时间有限）。</p><a id="more"></a><h3 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h3></li><li><p>cooperate //项目文件</p><ul><li>files.php //获取并返回文件内容</li><li>index.php //入口文件，，主页</li><li>postfile.php //上传文件</li><li>source // 资源文件夹<ul><li>main.css</li><li>main.js</li><li>…</li></ul></li><li>toughter //共享代码文件存储的文件夹</li></ul></li></ul><h3 id="详细代码"><a href="#详细代码" class="headerlink" title="详细代码"></a>详细代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// files.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">openfile</span><span class="params">($dir)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    $filepath = dirname(<span class="keyword">__FILE__</span>).<span class="string">"/toghter/"</span>.$dir;</span><br><span class="line">    $f = fopen($filepath,r)<span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"&lt;b&gt;ERROR！&lt;/b&gt;"</span>);</span><br><span class="line">    $each = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">while</span>(!feof($f)) &#123;</span><br><span class="line">        $each = $each.fgets($f) . <span class="string">"\n"</span>;  </span><br><span class="line">     &#125;</span><br><span class="line">    fclose($f);</span><br><span class="line">    <span class="keyword">return</span> $each;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_scandir</span><span class="params">($dir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//定义一个数组</span></span><br><span class="line">    $files = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">//检测是否存在文件</span></span><br><span class="line">    <span class="keyword">if</span> (is_dir($dir)) &#123;</span><br><span class="line">        <span class="comment">//打开目录</span></span><br><span class="line">        <span class="keyword">if</span> ($handle = opendir($dir)) &#123;</span><br><span class="line">            <span class="comment">//返回当前文件的条目</span></span><br><span class="line">            <span class="keyword">while</span> (($file = readdir($handle)) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">                <span class="comment">//去除特殊目录</span></span><br><span class="line">                <span class="keyword">if</span> ($file != <span class="string">"."</span> &amp;&amp; $file != <span class="string">".."</span>) &#123;</span><br><span class="line">                    <span class="comment">//判断子目录是否还存在子目录</span></span><br><span class="line">                    <span class="keyword">if</span> (is_dir($dir . <span class="string">"/"</span> . $file)) &#123;</span><br><span class="line">                        <span class="comment">//递归调用本函数，再次获取目录</span></span><br><span class="line">                        $files[$file] = my_scandir($dir . <span class="string">"/"</span> . $file);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">//获取目录数组</span></span><br><span class="line">                        $files[] = $dir . <span class="string">"/"</span> . $file;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//关闭文件夹</span></span><br><span class="line">            closedir($handle);</span><br><span class="line">            <span class="comment">//返回文件夹数组</span></span><br><span class="line">            <span class="keyword">return</span> $files;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="comment">//var_dump(my_scandir(__DIR__));</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span> /&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;很开心和你合作~&lt;/title&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> media=<span class="string">"screen"</span> href=<span class="string">"source/prism.css"</span> /&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> media=<span class="string">"screen"</span> href=<span class="string">"source/main.css"</span> /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">'files.php'</span>;</span><br><span class="line">    $filename = $_GET[<span class="string">"filename"</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($filename))&#123;</span><br><span class="line">        $code = openfile($filename);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $code = <span class="string">"\t#include\n\tint main\n\t&#123;\n\t\t/* code */\n\t\tprintf(\"Hello World!\");\n\t\treturn 0;\n\t&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;div id = <span class="string">"main"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"文件列表：\n"</span>;</span><br><span class="line">    $dir = my_scandir(<span class="keyword">__DIR__</span>)[toghter];</span><br><span class="line">    $num = count($dir);</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$num;++$i)&#123;</span><br><span class="line">        $filename = basename($dir[$i]);</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"&lt;button class= \"fb file-button button button-glow button-border button-rounded button-primary\"&gt;"</span>);</span><br><span class="line">        <span class="keyword">echo</span>($filename);</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">"&lt;/button&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;a class="modalLink" href="#"&gt;添加文件&lt;/a&gt;</span><br><span class="line">&lt;div class="overlay"&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="modal"&gt;</span><br><span class="line">    &lt;a href="#" class="closeBtn"&gt;取消&lt;/a&gt;</span><br><span class="line">    方便交流使用，请勿提交恶意代码！</span><br><span class="line">&lt;form enctype=<span class="string">"multipart/form-data"</span> action=<span class="string">"postfile.php"</span> method=<span class="string">"post"</span> &gt;</span><br><span class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> id=<span class="string">"file"</span>/&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"Submit"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"main"</span>&gt;</span><br><span class="line">&lt;pre id = "_code"&gt;&lt;code class="language-C"&gt;&lt;?php echo $code;?&gt;&lt;/code&gt;&lt;/pre&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=<span class="string">"http://code.jquery.com/jquery-latest.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"source/prism.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"source/main.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">'text/javascript'</span> src=<span class="string">'source/jquery.modal.js'</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">'text/javascript'</span> src=<span class="string">'source/site.js'</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//postfile.php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$file = $_FILES[<span class="string">"file"</span>];</span><br><span class="line">$path = dirname(<span class="keyword">__FILE__</span>).<span class="string">"/toghter/"</span>.$file[<span class="string">'name'</span>];</span><br><span class="line"><span class="keyword">if</span>(move_uploaded_file($file[<span class="string">'tmp_name'</span>],$path))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert(\"文件上传成功\")&lt;/script&gt;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $error = $_FILES[<span class="string">'myfile'</span>][<span class="string">'error'</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;\"上传错误\""</span>.$error.<span class="string">"&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;history.go(-1);&lt;/script&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  $myfile = "/private/var/tmp/";</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  if (is_readable ($myfile)) &#123;</span></span><br><span class="line"><span class="comment">    echo "此文件可读。", "\n";</span></span><br><span class="line"><span class="comment">  &#125; else &#123;</span></span><br><span class="line"><span class="comment">    echo "此文件不可读.", "\n";</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  if (is_writable ($myfile)) &#123;</span></span><br><span class="line"><span class="comment">    echo "此文件可写。", "\n";</span></span><br><span class="line"><span class="comment">  &#125; else &#123;</span></span><br><span class="line"><span class="comment">    echo "此文件不可写。", "\n";</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  if (is_executable ($myfile)) &#123;</span></span><br><span class="line"><span class="comment">    echo "此文件可执行!", "\n";</span></span><br><span class="line"><span class="comment">  &#125; else &#123;</span></span><br><span class="line"><span class="comment">    echo "此文件没有可执行权限。", "\n";</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">?&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h5 id="篇幅原因-不再赘述js等文件"><a href="#篇幅原因-不再赘述js等文件" class="headerlink" title="篇幅原因 不再赘述js等文件"></a>篇幅原因 不再赘述js等文件</h5>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scripts - 用python格式化json</title>
      <link href="/2019/01/26/scripts-%E7%94%A8python%E6%A0%BC%E5%BC%8F%E5%8C%96json/"/>
      <url>/2019/01/26/scripts-%E7%94%A8python%E6%A0%BC%E5%BC%8F%E5%8C%96json/</url>
      
        <content type="html"><![CDATA[<h4 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h4><ul><li>从终端接收参数</li><li>格式化json</li><li>输出格式化好的json到目标文件里<a id="more"></a><h4 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h4></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> getopt</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化json</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strtosjson</span><span class="params">(proformatfile)</span>:</span></span><br><span class="line">    js = json.dumps(proformatfile, sort_keys=<span class="keyword">True</span>,indent=<span class="number">4</span>,separators=(<span class="string">','</span>, <span class="string">':'</span>))</span><br><span class="line">    <span class="keyword">return</span> js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出用法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"Usage: formatjson [-h | --help] | [-i|--ifile] args [-o|--ofile] args"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(argv)</span>:</span></span><br><span class="line">    inputfile=<span class="string">""</span></span><br><span class="line">    outputfile=<span class="string">""</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opts,arg = getopt.getopt(argv,<span class="string">"hi:o:"</span>,[<span class="string">"ifile="</span>,<span class="string">"ofile="</span>])</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        getopt.getopt()方法说明：</span></span><br><span class="line"><span class="string">            args:要解析的命令行参数列表</span></span><br><span class="line"><span class="string">            oprtions:字符串的格式 带’:‘表示此选项后必须有附加参数</span></span><br><span class="line"><span class="string">            long_options:列表格式 带'='表示此选项后必须有附加参数</span></span><br><span class="line"><span class="string">            返回值:</span></span><br><span class="line"><span class="string">                - (option,value)</span></span><br><span class="line"><span class="string">                -  参数列表</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">    <span class="keyword">except</span> getopt.GetoptError:</span><br><span class="line">        usage()</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line">        <span class="keyword">if</span> opt == <span class="string">'-h'</span>:</span><br><span class="line">            usage()</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-i"</span>, <span class="string">"--ifile"</span>):</span><br><span class="line">            inputfile = arg</span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-o"</span>, <span class="string">"--ofile"</span>):</span><br><span class="line">            outputfile = arg</span><br><span class="line">    infilepath = inputfile</span><br><span class="line">    outfilepath = outputfile</span><br><span class="line">    format(infilepath,outfilepath)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读写文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">format</span><span class="params">(infilepath,outfilepath)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(infilepath,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            proformatfile = f.read()</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        print(<span class="string">"No Such file or directory!"</span>)</span><br><span class="line">        usage()</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br><span class="line">    js = strtosjson(eval(proformatfile))</span><br><span class="line">    <span class="comment"># eval() 将string转换为dictionary</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(outfilepath,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(js)</span><br><span class="line">            print(<span class="string">"json fromat success!"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        print(<span class="string">"OutPutFileWriteError!"</span>)</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">   main(sys.argv[<span class="number">1</span>:]) <span class="comment">#除去本身的文件名</span></span><br></pre></td></tr></table></figure><h4 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python formatjson.py -i /Users/whoami/Desktop/test.txt -o /Users/whoami/Desktop/t.txt</span></span><br></pre></td></tr></table></figure><p><code>$ json fromat success!</code></p><h4 id="后续改进"><a href="#后续改进" class="headerlink" title="后续改进"></a>后续改进</h4><ul><li>输入输出文件过于繁琐 可以加上默认值</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 自用脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建git服务器</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="安装依赖库和编译工具"><a href="#安装依赖库和编译工具" class="headerlink" title="安装依赖库和编译工具"></a>安装依赖库和编译工具</h3><a id="more"></a><h4 id="为了后续安装能正常进行，我们先来安装一些相关依赖库和编译工具"><a href="#为了后续安装能正常进行，我们先来安装一些相关依赖库和编译工具" class="headerlink" title="为了后续安装能正常进行，我们先来安装一些相关依赖库和编译工具"></a>为了后续安装能正常进行，我们先来安装一些相关依赖库和编译工具</h4><p><code>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</code></p><h4 id="安装编译工具"><a href="#安装编译工具" class="headerlink" title="安装编译工具"></a>安装编译工具</h4><p><code>yum install gcc perl-ExtUtils-MakeMaker</code></p><p>###下载 git</p><h4 id="选一个目录，用来放下载下来的安装包，这里将安装包放在-usr-local-src-目录里"><a href="#选一个目录，用来放下载下来的安装包，这里将安装包放在-usr-local-src-目录里" class="headerlink" title="选一个目录，用来放下载下来的安装包，这里将安装包放在 /usr/local/src 目录里"></a>选一个目录，用来放下载下来的安装包，这里将安装包放在 <code>/usr/local/src</code> 目录里</h4><p><code>cd /usr/local/src</code></p><h4 id="到官网找一个新版稳定的源码包下载到-usr-local-src文件夹里"><a href="#到官网找一个新版稳定的源码包下载到-usr-local-src文件夹里" class="headerlink" title="到官网找一个新版稳定的源码包下载到 /usr/local/src文件夹里"></a>到官网找一个新版稳定的源码包下载到 <code>/usr/local/src</code>文件夹里</h4><p><code>wget https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz</code></p><h3 id="解压和编译"><a href="#解压和编译" class="headerlink" title="解压和编译"></a>解压和编译</h3><h4 id="解压下载的源码包"><a href="#解压下载的源码包" class="headerlink" title="解压下载的源码包"></a>解压下载的源码包</h4><p><code>tar -zvxf git-2.10.0.tar.gz</code></p><h4 id="解压后进入-git-2-10-0-文件夹"><a href="#解压后进入-git-2-10-0-文件夹" class="headerlink" title="解压后进入 git-2.10.0 文件夹"></a>解压后进入 <code>git-2.10.0</code> 文件夹</h4><p><code>cd git-2.10.0</code></p><h4 id="执行编译"><a href="#执行编译" class="headerlink" title="执行编译"></a>执行编译</h4><p><code>make all prefix=/usr/local/git</code></p><h4 id="编译完成后-安装到-usr-local-git-目录下"><a href="#编译完成后-安装到-usr-local-git-目录下" class="headerlink" title="编译完成后, 安装到 /usr/local/git 目录下"></a>编译完成后, 安装到 <code>/usr/local/git</code> 目录下</h4><p><code>make install prefix=/usr/local/git</code></p><h3 id="将-git-目录加入-PATH"><a href="#将-git-目录加入-PATH" class="headerlink" title="将 git 目录加入 PATH"></a>将 git 目录加入 PATH</h3><h4 id="将原来的-PATH-指向目录修改为现在的目录"><a href="#将原来的-PATH-指向目录修改为现在的目录" class="headerlink" title="将原来的 PATH 指向目录修改为现在的目录"></a>将原来的 PATH 指向目录修改为现在的目录</h4><p><code>echo &#39;export PATH=$PATH:/usr/local/git/bin&#39; &gt;&gt; /etc/bashrc</code></p><h4 id="生效环境变量"><a href="#生效环境变量" class="headerlink" title="生效环境变量"></a>生效环境变量</h4><p><code>source /etc/bashrc</code></p><h4 id="此时我们能查看-git-版本号，说明我们已经安装成功了。"><a href="#此时我们能查看-git-版本号，说明我们已经安装成功了。" class="headerlink" title="此时我们能查看 git 版本号，说明我们已经安装成功了。"></a>此时我们能查看 git 版本号，说明我们已经安装成功了。</h4><p><code>git --version</code></p><h3 id="创建-git-账号"><a href="#创建-git-账号" class="headerlink" title="创建 git 账号"></a>创建 git 账号</h3><h4 id="为我们刚刚搭建好的-git-创建一个账号"><a href="#为我们刚刚搭建好的-git-创建一个账号" class="headerlink" title="为我们刚刚搭建好的 git 创建一个账号"></a>为我们刚刚搭建好的 git 创建一个账号</h4><p><code>useradd -m studnet</code></p><h4 id="然后为这个账号设置密码"><a href="#然后为这个账号设置密码" class="headerlink" title="然后为这个账号设置密码"></a>然后为这个账号设置密码</h4><p><code>passwd student</code></p><h4 id="输入两次密码"><a href="#输入两次密码" class="headerlink" title="输入两次密码"></a>输入两次密码</h4><h3 id="初始化-git-仓库并配置用户权限"><a href="#初始化-git-仓库并配置用户权限" class="headerlink" title="初始化 git 仓库并配置用户权限"></a>初始化 git 仓库并配置用户权限</h3><h4 id="创建-git-仓库并初始化"><a href="#创建-git-仓库并初始化" class="headerlink" title="创建 git 仓库并初始化"></a>创建 git 仓库并初始化</h4><p>我们创建 <code>/data/repositories</code> 目录用于存放 git 仓库</p><p><code>mkdir -p /data/repositories</code></p><h4 id="创建好后，初始化这个仓库"><a href="#创建好后，初始化这个仓库" class="headerlink" title="创建好后，初始化这个仓库"></a>创建好后，初始化这个仓库</h4><p><code>cd /data/repositories/ &amp;&amp; git init --bare test.git</code></p><h3 id="配置用户权限"><a href="#配置用户权限" class="headerlink" title="配置用户权限"></a>配置用户权限</h3><h4 id="给-git-仓库目录设置用户和用户组并设置权限"><a href="#给-git-仓库目录设置用户和用户组并设置权限" class="headerlink" title="给 git 仓库目录设置用户和用户组并设置权限"></a>给 git 仓库目录设置用户和用户组并设置权限</h4><ul><li><p><code>chown -R gituser:gituser /data/repositories</code></p></li><li><p><code>chmod 755 /data/repositories</code></p></li><li><p>查找 <code>git-shell</code> 所在目录<br>, 编辑 <code>/etc/passwd</code> 文件，将最后一行关于 <code>student</code> 的登录 shell 配置改为 <code>git-shell</code> 的目录<br>如下</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">student r:x:500:500::/home/gituser:/usr/local/git/bin/git-shell</span><br></pre></td></tr></table></figure><h3 id="使用搭建好的-Git-服务"><a href="#使用搭建好的-Git-服务" class="headerlink" title="使用搭建好的 Git 服务"></a>使用搭建好的 Git 服务</h3><h4 id="克隆-test-repo-到本地"><a href="#克隆-test-repo-到本地" class="headerlink" title="克隆 test repo 到本地"></a>克隆 test repo 到本地</h4><p><code>cd ~ &amp;&amp; git clone student@127.0.0.1:/data/repositories/test.git</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建wordpress个人博客</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BAwordpress%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BAwordpress%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="环境：Ubuntu-16-04-1-LTS-64-位"><a href="#环境：Ubuntu-16-04-1-LTS-64-位" class="headerlink" title="环境：Ubuntu 16.04.1 LTS 64 位"></a>环境：Ubuntu 16.04.1 LTS 64 位</h2><h2 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h2><a id="more"></a><h3 id="1-准备-LAMP-环境"><a href="#1-准备-LAMP-环境" class="headerlink" title="1.准备 LAMP 环境"></a>1.准备 LAMP 环境</h3><p>使用 <code>apt-get</code> 安装 Apache2<br><code>sudo apt-get install apache2 -y</code></p><p>安装 PHP 组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0 -y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libapache2-mod-php7.0</span><br></pre></td></tr></table></figure><p>安装 MySQL 服务</p><p>安装 MySQL 过程中，控制台会提示您输入 MySQL 的密码，需要输入两次密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server -y</span><br></pre></td></tr></table></figure><p>安装 php MySQL相关组件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0-mysql</span><br></pre></td></tr></table></figure><p>安装 phpmyadmin:</p><p>使用 <code>apt-get</code> 安装 phpmyadmin，安装过程中，需要根据提示选择 apache2 ，再输入root密码 和数据库密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install phpmyadmin -y</span><br></pre></td></tr></table></figure><p>建立 <code>/var/www/html</code> 下的软连接:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin</span><br></pre></td></tr></table></figure><p>重启 MySQL 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><p>重启 Apache 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2.service</span><br></pre></td></tr></table></figure><h3 id="安装并配置-WordPress"><a href="#安装并配置-WordPress" class="headerlink" title="安装并配置 WordPress"></a>安装并配置 WordPress</h3><h3 id="安装-WordPress"><a href="#安装-WordPress" class="headerlink" title="安装 WordPress"></a>安装 WordPress</h3><p>需要下载一个 WordPress 压缩包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://cn.wordpress.org/wordpress-4.7.4-zh_CN.zip</span><br></pre></td></tr></table></figure><p>下载完成后，解压这个压缩包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo unzip wordpress-4.7.4-zh\_CN.zip</span><br></pre></td></tr></table></figure><h3 id="为-wordpress-配置一个数据库"><a href="#为-wordpress-配置一个数据库" class="headerlink" title="为 wordpress 配置一个数据库"></a>为 wordpress 配置一个数据库</h3><p>进入 mysql，输入以下代码后，按提示输入您MySQL密码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>为 wordpress 创建一个叫 wordpress 的数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE wordpress;</span><br></pre></td></tr></table></figure><p>为 这个数据库设置一个用户为 wordpressuser：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER wordpressuser;</span><br></pre></td></tr></table></figure><p>为这个用户配置一个密码为 password123：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD FOR wordpressuser= PASSWORD(&quot;password123&quot;);</span><br></pre></td></tr></table></figure><p>为这个用户配置数据库的访问权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON wordpress.* TO wordpressuser IDENTIFIED BY&quot;password123&quot;;</span><br></pre></td></tr></table></figure><p>生效这些配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>然后退出 mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure><h3 id="配置-wordpress"><a href="#配置-wordpress" class="headerlink" title="配置 wordpress"></a>配置 wordpress</h3><p>由于PHP默认访问 <em>/var/www/html/</em> 文件夹，所以需要把 wordpress 文件夹里的文件都复制到 <em>/var/www/html/</em> 文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv wordpress/* /var/www/html/</span><br></pre></td></tr></table></figure><p>修改一下 /var/www/html/ 目录权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 /var/www/html/</span><br></pre></td></tr></table></figure><p>将apache指定到index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /var/www/html/index.html /var/www/html/index~.html</span><br></pre></td></tr></table></figure><p>重启 Apache 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盗号所启发的</title>
      <link href="/2019/01/26/%E7%9B%97%E5%8F%B7%E6%89%80%E5%90%AF%E5%8F%91%E7%9A%84/"/>
      <url>/2019/01/26/%E7%9B%97%E5%8F%B7%E6%89%80%E5%90%AF%E5%8F%91%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<p>起因：昨天晚上朋友发了一个消息给我：<br><a id="more"></a><br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju3ybunjj30fd03qwfd.jpg" alt=""></p><p>晚上喝了点酒，没怎么看就睡了。<br>第二天一大早上想起这个问题，心血来潮想扒一扒这个网站</p><p>首先看这个网址：<br><a href="http://maschada.wbac.ac.th/ui.html?index/=ciquitj?url=s9fwpc&amp;iv" target="_blank" rel="noopener">http://maschada.wbac.ac.th/ui.html?index/=ciquitj?url=s9fwpc&amp;iv</a></p><p>打开是一个QQ安全中心的登陆界面：</p><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju49p29kj30fd0bgt9m.jpg" alt=""></p><p>常识：QQ安全中心的网址统一都是 <a href="https://aq.qq.com/" target="_blank" rel="noopener">https://aq.qq.com/</a><br>再加上这么奇怪的网站，第一反应就是盗号网址。chrome查看源代码：一眼看去有几个地方比较可疑：</p><h3 id="1-form的提交"><a href="#1-form的提交" class="headerlink" title="1. form的提交"></a>1. form的提交</h3><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju58eqgaj30fd028t9a.jpg" alt=""></p><h3 id="2-一段被url编码的js"><a href="#2-一段被url编码的js" class="headerlink" title="2. 一段被url编码的js"></a>2. 一段被url编码的js</h3><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju5wcgdpj30fd01nwf3.jpg" alt=""></p><h3 id="3-奇怪的js引用"><a href="#3-奇怪的js引用" class="headerlink" title="3. 奇怪的js引用"></a>3. 奇怪的js引用</h3><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju6o15tvj309j00vjrc.jpg" alt=""></p><pre><code>首先搞懂这个url编码的js：</code></pre><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju7igpmhj30fd047js5.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju7s55fcj30fd022aa9.jpg" alt=""><br>这里只是控制了输入框的默认值，问题不大。<br>再来看js引用部分：<br>一个很老套的套路：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;jj.php&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这里的jj.php并不是php文件，用script引用，所以jj.php是一个js文件！<br>打开：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju959pkmj30fd07swjh.jpg" alt=""><br>格式整理一下。。。<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju9h44axj30fd0a5afj.jpg" alt=""><br>前半部分是简单的逻辑，主要判断输入的QQ号和密码是否符合标准。</p><p>关键代码<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzju9prr7dj30fd05n0uo.jpg" alt=""><br>这里就是很明显的套路了：<br>你输入正确的QQ账户和密码后就会跳转到真正的QQ安全中心（这一步如果是输入错误也可能直接登录到QQ安全中心，因为一般QQ或者浏览器都会自动登录，不过这个没关系，不会有安全问题，也算是一个障眼法。）<br>这里注意到一个注释，和和上面的post请求差不多，但是用一个p();<br>所以来看看p()代码：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuabau58j30fd02b0tb.jpg" alt=""><br>s的值用了ecode64()也就是用了base64编码：<br>QQ号 + t + 密码 + t<br>如果我输入了QQ和密码为 ： 88488848t shabisibabat<br>base64 编码：<br>ODg0ODg4NDhcdCBzaGFiaXNpYmFiYVx0==<br><a href="http://maschada.wbac.ac.th//tpl/36402021580636317/ODg0ODg4NDhcdCBzaGFiaXNpYmFiYVx0==.gif_1474950810000" target="_blank" rel="noopener">http://maschada.wbac.ac.th//tpl/36402021580636317/ODg0ODg4NDhcdCBzaGFiaXNpYmFiYVx0==.gif_1474950810000</a></p><p>到此，分析结束。<br>其他信息：<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjuak04lcj30fd07mab8.jpg" alt=""><br>总结：</p><p>小白一只，没有社工库，到这里就全部完了，只是简单分析了一下盗号的一般套路，希望各位保护好自己的账号。<br>网络安全常识和意识不只是搞网络安全的才需要具有的素质。<br>现在这种网络环境，这些隐私信息稍不注意就会被人挖走，好好提高自己的安全意识，尽量不做internet裸奔者。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python-爬虫入门</title>
      <link href="/2019/01/26/Python-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/"/>
      <url>/2019/01/26/Python-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置</span></span><br><span class="line">headers = &#123;</span><br><span class="line">            <span class="string">'content-type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86\_64; rv:22.0) Gecko/20100101 Firefox/22.0'</span></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://www.newsweek.com/world"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_req</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment">#连接网页 如果失败 等待三秒继续连接</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            re = requests.get(url,headers = headers)</span><br><span class="line">            print(<span class="string">'爬虫准备就绪...'</span>)</span><br><span class="line">            print(re.status_code)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">            print(<span class="string">'连接错误 请等待。。。'</span>)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ChunkedEncodingError:</span><br><span class="line">            print(<span class="string">'编码错误 请等待。。。'</span>)</span><br><span class="line">            time.sleep(<span class="number">3</span>)    </span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'未知错误 请等待。。。'</span>)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rex</span><span class="params">(re)</span>:</span></span><br><span class="line">    <span class="comment">#处理网页内容</span></span><br><span class="line">    html_text = re.text</span><br><span class="line">    soup = bs(html_text,<span class="string">"lxml"</span>)</span><br><span class="line">    article_list = []</span><br><span class="line">    article_url_list = []</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">        u = each.get(<span class="string">"href"</span>)</span><br><span class="line">        article_list.append(u)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取真正的文章链接</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> article_list:</span><br><span class="line">        <span class="keyword">if</span>(str(each).count(<span class="string">"-"</span>,<span class="number">0</span>,len(str(each))<span class="number">-1</span>) &gt; <span class="number">3</span>):</span><br><span class="line">            article_url_list.append(str(each))</span><br><span class="line">    <span class="comment">#去掉重复链接并拼接成完整的URL</span></span><br><span class="line">    article_url_list = list(set(article_url_list))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(article_url_list)):</span><br><span class="line">        article_url_list[i] = <span class="string">"http://www.newsweek.com"</span> + article_url_list[i]</span><br><span class="line">    <span class="keyword">return</span> article_url_list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_article</span><span class="params">(x_list)</span>:</span></span><br><span class="line">    all_article = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(x_list)):</span><br><span class="line">        _list = []</span><br><span class="line">        print(<span class="string">"正在处理:"</span>)</span><br><span class="line">        print(<span class="string">"----------------"</span>+x_list[i]+<span class="string">"--------------"</span>)</span><br><span class="line">        re = get_req(x_list[i])</span><br><span class="line">        soup = bs(re.text,<span class="string">"lxml"</span>)</span><br><span class="line">        tags = soup.find(name = <span class="string">'div'</span>,attrs = &#123;<span class="string">"class"</span>:<span class="string">"article-body"</span>&#125;).find_all(<span class="string">"p"</span>)</span><br><span class="line">        \<span class="comment">#处理标签 保留文章</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> tags:</span><br><span class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> i(<span class="string">"a"</span>)]</span><br><span class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> i(<span class="string">"picture"</span>)]</span><br><span class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> i(<span class="string">"iframe"</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> tags:</span><br><span class="line">            all_article.append(i.get_text())</span><br><span class="line">    <span class="keyword">return</span> all_article</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    article = get_article(rex(get_req(url)))</span><br><span class="line">    article_str = <span class="string">''</span>.join(article)</span><br><span class="line">    f = open(<span class="string">'articles.txt'</span>,<span class="string">'w+'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    f.write(article_str)</span><br><span class="line">    f.close()</span><br><span class="line">    print(<span class="string">"----OK----"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">f = open(<span class="string">'articles.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">txt = f.read()</span><br><span class="line">_list = txt.split()</span><br><span class="line">_dir = Counter(_list)</span><br><span class="line">_json = json.dumps(_dir)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-微信好友分析</title>
      <link href="/2019/01/26/Python-%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%88%86%E6%9E%90/"/>
      <url>/2019/01/26/Python-%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>对微信好友进行了一些简单的统计和分析<br><a id="more"></a><br>在使用pip安装wordcloud包时会报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: Microsoft Visual C++ 14.0 is required. Get it with &quot;Microsoft Visual C++ Build Tools&quot;: http://landinghub.visualstudio.com/visual-cpp-build-tools</span><br></pre></td></tr></table></figure></p></blockquote><p>解决：</p><p>打开<a href="http://landinghub.visualstudio.com/visual-cpp-build-tools" target="_blank" rel="noopener">http://landinghub.visualstudio.com/visual-cpp-build-tools</a>，下载并安装Visual C++ 2015 Build Tools。</p><p>再次使用pip安装即可：<br><code>pip install wordcloud</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span>  pd</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Pie,Map,Style,Page,Bar</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">\<span class="comment">#按照key获得相关的list</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>\<span class="title">_attr</span><span class="params">(friends,key)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> list(map(<span class="keyword">lambda</span> user:user.get(key),friends))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>\<span class="title">_friends</span><span class="params">()</span>:</span></span><br><span class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)</span><br><span class="line">    friends = itchat.get_friends()</span><br><span class="line">    users = dict(province=get_attr(friends, <span class="string">"Province"</span>),</span><br><span class="line">                   city=get_attr(friends, <span class="string">"City"</span>),</span><br><span class="line">                   nickname=get_attr(friends, <span class="string">"NickName"</span>),</span><br><span class="line">                   sex=get_attr(friends, <span class="string">"Sex"</span>),</span><br><span class="line">                   signature=get_attr(friends, <span class="string">"Signature"</span>),</span><br><span class="line">                   remarkname=get_attr(friends, <span class="string">"RemarkName"</span>),</span><br><span class="line">                   pyquanpin=get_attr(friends, <span class="string">"PYQuanPin"</span>),</span><br><span class="line">                   displayname=get_attr(friends, <span class="string">"DisplayName"</span>),</span><br><span class="line">                   isowner=get_attr(friends, <span class="string">"IsOwner"</span>))</span><br><span class="line">    <span class="keyword">return</span> users</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sex</span>\<span class="title">_stats</span><span class="params">(users)</span>:</span></span><br><span class="line">    df = pd.DataFrame(users)</span><br><span class="line">    sex_arr = df.groupby([<span class="string">'sex'</span>], as_index=<span class="keyword">True</span>)[<span class="string">'sex'</span>].count()</span><br><span class="line">    data = dict(zip(list(sex_arr.index),list(sex_arr)))</span><br><span class="line">    data[<span class="string">'可能没有性别吧'</span>] = data.pop(<span class="number">0</span>)</span><br><span class="line">    data[<span class="string">'男'</span>] = data.pop(<span class="number">1</span>)</span><br><span class="line">    data[<span class="string">'女'</span>] = data.pop(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> data.keys(),data.values()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span>\<span class="title">_sex</span><span class="params">()</span>:</span></span><br><span class="line">    users = get_friends()</span><br><span class="line">    page = Page()</span><br><span class="line">    \<span class="comment">#style = Style(width = 1100,height = 600)</span></span><br><span class="line">    \<span class="comment">#style\_middle = Style(width = 900,height = 500)</span></span><br><span class="line">    data = sex_stats(users)</span><br><span class="line">    attr,value = data</span><br><span class="line">    chart = Pie(<span class="string">'微信性别'</span>)</span><br><span class="line">    chart.add(<span class="string">''</span>, attr, value, center=[<span class="number">50</span>, <span class="number">50</span>],</span><br><span class="line">                radius=[<span class="number">30</span>, <span class="number">70</span>], is_label_show=<span class="keyword">True</span>, legend_orient=<span class="string">'horizontal'</span>, legend_pos=<span class="string">'center'</span>,</span><br><span class="line">                legend_top=<span class="string">'bottom'</span>, is_area_show=<span class="keyword">True</span>)</span><br><span class="line">    page.add(chart)</span><br><span class="line">    page.render()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prov</span>\<span class="title">_stats</span><span class="params">(users)</span>:</span></span><br><span class="line">    prv = pd.DataFrame(users)</span><br><span class="line">    prv_cnt = prv.groupby(<span class="string">'province'</span>, as_index=<span class="keyword">True</span>)[<span class="string">'province'</span>].count().sort_values()</span><br><span class="line">    attr = list(map(<span class="keyword">lambda</span> x: x <span class="keyword">if</span> x != <span class="string">''</span> <span class="keyword">else</span> <span class="string">'未知'</span>, list(prv_cnt.index)))</span><br><span class="line">    <span class="keyword">return</span> attr, list(prv_cnt)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span>\<span class="title">_city</span><span class="params">()</span>:</span></span><br><span class="line">    users = get_friends()</span><br><span class="line">    data = prov_stats(users)</span><br><span class="line">    attr, value = data</span><br><span class="line">    page = Page()</span><br><span class="line">    style = Style(width = <span class="number">1100</span>,height = <span class="number">600</span>)</span><br><span class="line">    style_middle = Style(width = <span class="number">900</span>,height = <span class="number">500</span>)</span><br><span class="line">    chart = Map(<span class="string">'中国地图'</span>, **style.init_style)</span><br><span class="line">    chart.add(<span class="string">''</span>, attr, value, is_label_show=<span class="keyword">True</span>, is_visualmap=<span class="keyword">True</span>, visual_text_color=<span class="string">'\#000'</span>)</span><br><span class="line">    page.add(chart)</span><br><span class="line"></span><br><span class="line">    chart = Bar(<span class="string">'柱状图'</span>, **style_middle.init_style)</span><br><span class="line">    chart.add(<span class="string">''</span>, attr, value, is_stack=<span class="keyword">True</span>, is_convert=<span class="keyword">True</span>, label_pos=<span class="string">'inside'</span>, is_legend_show=<span class="keyword">True</span>,</span><br><span class="line">            is_label_show=<span class="keyword">True</span>)</span><br><span class="line">    page.add(chart)</span><br><span class="line">    page.render()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jieba</span>\<span class="title">_cut</span><span class="params">(users)</span>:</span></span><br><span class="line">    signature = users[<span class="string">'signature'</span>]</span><br><span class="line">    words = <span class="string">''</span>.join(signature)</span><br><span class="line">    res_list = jieba.cut(words,cut_all = <span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">return</span> res_list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span>\<span class="title">_wc</span><span class="params">(words\_list)</span>:</span></span><br><span class="line">    res_path = os.path.abspath(<span class="string">'./resource'</span>)</span><br><span class="line">    words = <span class="string">' '</span>.join(word_list)</span><br><span class="line"></span><br><span class="line">    back_pic = numpy.array(Image.open(<span class="string">"%s/wc.png"</span> % res_path))</span><br><span class="line"></span><br><span class="line">    stopwords = set(SETWORDS)</span><br><span class="line">    stopwords = stopwords.union(set([<span class="string">'class'</span>,<span class="string">'span'</span>,<span class="string">'emoji'</span>,<span class="string">'emoji'</span>,<span class="string">'emoji1f388'</span>,<span class="string">'emoji1f604'</span>]))</span><br><span class="line"></span><br><span class="line">    wc = WordCloud(background_color=<span class="string">"white"</span>, margin=<span class="number">0</span>,</span><br><span class="line">                     font_path=<span class="string">'%s/hanyiqihei.ttf'</span> % res_path,</span><br><span class="line">                     mask=back_pic,</span><br><span class="line">                     max_font_size=<span class="number">70</span>,</span><br><span class="line">                     stopwords=stopwords</span><br><span class="line">                     ).generate(words)</span><br><span class="line"></span><br><span class="line">    plt.imshow(wc)</span><br><span class="line"></span><br><span class="line">    plt.imshow(wc.recolor(color_func = image_colors))</span><br><span class="line"></span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    \<span class="comment">#create\_sex()</span></span><br><span class="line">    \<span class="comment">#create\_city()</span></span><br><span class="line">    create_wc()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'\_\_main\_\_'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-鸡汤</title>
      <link href="/2019/01/26/Python-%E9%B8%A1%E6%B1%A4/"/>
      <url>/2019/01/26/Python-%E9%B8%A1%E6%B1%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>调用接口实现每天发送鸡汤和翻译<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Timer</span><br><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> wechat_sender <span class="keyword">import</span> Sender</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">bot = Bot()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>\<span class="title">_news1</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"http://open.iciba.com/dsapi/"</span></span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    contents = r.json()[<span class="string">'content'</span>]</span><br><span class="line">    translation = r.json()[<span class="string">'translation'</span>]</span><br><span class="line">    <span class="keyword">return</span> contents,translation</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span>\<span class="title">_news</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        my_friend = bot.friends().search(<span class="string">u'whoami'</span>)[<span class="number">0</span>] \<span class="comment">#发送对象的微信名</span></span><br><span class="line">        my_friend.send(get_news1()[<span class="number">0</span>])</span><br><span class="line">        my_friend.send(get_news1()[<span class="number">1</span>][<span class="number">5</span>:])</span><br><span class="line">        my_friend.send(<span class="string">u'\_\_send\_By\_Wpk'</span>)</span><br><span class="line">        t = Timer(<span class="number">86400</span>,send_news)</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        my_friend = bot.friends().search(<span class="string">'whoami'</span>)[<span class="number">0</span>] \<span class="comment">#自己的微信名</span></span><br><span class="line">        my_friend.send(<span class="string">u"今天的消息发送失败了"</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"\_\_main\_\_"</span>:</span><br><span class="line">    send_news()</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-聊天机器人</title>
      <link href="/2019/01/26/Python-%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
      <url>/2019/01/26/Python-%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p>首先要去<a href="http://www.tuling123.com/" target="_blank" rel="noopener">www.tuling123.com</a>注册一个机器人获得一个机器人调用的api_key<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#图灵机器人</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">talks_robot</span><span class="params">(info = <span class="string">'test'</span>)</span>:</span></span><br><span class="line">    api_url = <span class="string">'http://www.tuling123.com/openapi/api'</span></span><br><span class="line">    apikey = <span class="string">'5xxxxxxxxxxxxxxxxxxxxd'</span></span><br><span class="line">    data = &#123;<span class="string">'key'</span>: apikey,</span><br><span class="line">                <span class="string">'info'</span>: info&#125;</span><br><span class="line">    req = requests.post(api_url, data=data).text</span><br><span class="line">    replys = json.loads(req)[<span class="string">'text'</span>]</span><br><span class="line">    <span class="keyword">return</span> replys</span><br><span class="line"></span><br><span class="line"><span class="comment">#微信自动回复</span></span><br><span class="line">robot = Bot()</span><br><span class="line"><span class="comment"># 回复来自其他好友、群聊和公众号的消息</span></span><br><span class="line"><span class="meta">@robot.register()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reply_my_friend</span><span class="params">(msg)</span>:</span></span><br><span class="line">    message = <span class="string">'&#123;&#125;'</span>.format(msg.text)</span><br><span class="line">    replys = talks_robot(info=message)</span><br><span class="line">    <span class="keyword">return</span> replys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听和自动处理消息</span></span><br><span class="line">robot.start()</span><br><span class="line">embed()</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习实战-kNN</title>
      <link href="/2019/01/26/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98-kNN/"/>
      <url>/2019/01/26/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98-kNN/</url>
      
        <content type="html"><![CDATA[<blockquote><p>邻近算法，或者说K最近邻(kNN，k-NearestNeighbor)分类算法是<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98" target="_blank" rel="noopener">数据挖掘</a>分类技术中最简单的方法之一。所谓K最近邻，就是k个最近的邻居的意思，说的是每个样本都可以用它最接近的k个邻居来代表。</p></blockquote><a id="more"></a><blockquote><p>kNN算法的核心思想是如果一个样本在特征空间中的k个最相邻的样本中的大多数属于某一个类别，则该样本也属于这个类别，并具有这个类别上样本的特性。该方法在确定分类决策上只依据最邻近的一个或者几个样本的类别来决定待分样本所属的类别。 kNN方法在类别决策时，只与极少量的相邻样本有关。由于kNN方法主要靠周围有限的邻近的样本，而不是靠判别类域的方法来确定所属类别的，因此对于类域的交叉或重叠较多的待分样本集来说，kNN方法较其他方法更为适合。</p></blockquote><p>用 途 : 用于分类，对未知事物的识别</p><blockquote><p>K最近邻(k-Nearest Neighbor，KNN)分类算法，是一个理论上比较成熟的方法，也是最简单的机器学习算法之一。该方法的思路是：如果一个样本在特征空间中的k个最相似(即特征空间中最邻近)的样本中的大多数属于某一个类别，则该样本也属于这个类别。KNN算法中，所选择的邻居都是已经正确分类的对象。该方法在定类决策上只依据最邻近的一个或者几个样本的类别来决定待分样本所属的类别。 KNN方法虽然从原理上也依赖于极限定理，但在类别决策时，只与极少量的相邻样本有关。由于KNN方法主要靠周围有限的邻近的样本，而不是靠判别类域的方法来确定所属类别的，因此对于类域的交叉或重叠较多的待分样本集来说，KNN方法较其他方法更为适合。</p></blockquote><p>主要步骤如下：</p><p>对未知类别属性的数据集中的每个点依次执行以下操作:</p><p>(1) 计算已知类别数据集中的点与当前点之间的距离</p><p>(2) 按照距离递增次序排序</p><p>(3) 选取与当前点距离最小的k个点</p><p>(4) 确定前k个点所在类别的出现频率</p><p>(5) 返回前k个点出现频率最高的类别作为当前点的预测分类</p><h3 id="kNN算法的优缺点："><a href="#kNN算法的优缺点：" class="headerlink" title="kNN算法的优缺点："></a>kNN算法的优缺点：</h3><blockquote><p>KNN算法的优点：</p><p>1）简单、有效。<br>2）重新训练的代价较低（类别体系的变化和训练集的变化，在Web环境和电子商务应用中是很常见的）。<br>3）计算时间和空间线性于训练集的规模（在一些场合不算太大）。<br>4）由于KNN方法主要靠周围有限的邻近的样本，而不是靠判别类域的方法来确定所属类别的，因此对于类域的交叉或重叠较多的待分样本集来说，KNN方法较其他方法更为适合。<br>5）该算法比较适用于样本容量比较大的类域的自动分类，而那些样本容量较小的类域采用这种算法比较容易产生误分。</p><p>KNN算法缺点：</p><p>1）KNN算法是懒散学习方法（lazy learning,基本上不学习），一些积极学习的算法要快很多。<br>2）类别评分不是规格化的（不像概率评分）。<br>3）输出的可解释性不强，例如决策树的可解释性较强。<br>4）该算法在分类时有个主要的不足是，当样本不平衡时，如一个类的样本容量很大，而其他类样本容量很小时，有可能导致当输入一个新样本时，该样本的K个邻居中大容量类的样本占多数。该算法只计算“最近的”邻居样本，某一类的样本数量很大，那么或者这类样本并不接近目标样本，或者这类样本很靠近目标样本。无论怎样，数量并不能影响运行结果。可以采用权值的方法（和该样本距离小的邻居权值大）来改进。<br>5）计算量较大。目前常用的解决方法是事先对已知样本点进行剪辑，事先去除对分类作用不大的样本。</p></blockquote><h3 id="kNN算法的Python实现"><a href="#kNN算法的Python实现" class="headerlink" title="kNN算法的Python实现"></a>kNN算法的Python实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> * <span class="comment">#导入numpy科学计算包</span></span><br><span class="line"><span class="keyword">import</span> operator     <span class="comment">#导入运算符模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#加载数据的方法，返回样本数据（每一行是一个样本）和样本标签</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createDataSet</span><span class="params">()</span>:</span></span><br><span class="line">    group = array([[<span class="number">90</span>,<span class="number">100</span>],[<span class="number">88</span>,<span class="number">90</span>],[<span class="number">85</span>,<span class="number">95</span>],[<span class="number">10</span>,<span class="number">20</span>],[<span class="number">30</span>,<span class="number">40</span>],[<span class="number">50</span>,<span class="number">30</span>]])    \<span class="comment">#样本点数据</span></span><br><span class="line">    labels = [<span class="string">'A'</span>,<span class="string">'A'</span>,<span class="string">'A'</span>，<span class="string">'D'</span>，<span class="string">'D'</span>,<span class="string">'D'</span>]</span><br><span class="line">    <span class="keyword">return</span> group,labels</span><br><span class="line"></span><br><span class="line"><span class="comment">#分类方法 传入的dataset需是array数组</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify0</span><span class="params">(inX, dataSet, labels, k)</span>:</span>    <span class="comment">#inX为输入样本，例如[85,90]</span></span><br><span class="line">    dataSetSize = dataSet.shape[<span class="number">0</span>]              <span class="comment">#求出输入数据矩阵的行数（样本个数）</span></span><br><span class="line">    diffMat = tile(inX, (dataSetSize,<span class="number">1</span>)) - dataSet    <span class="comment">#求矩阵差</span></span><br><span class="line">    sqDiffMat = diffMat ** <span class="number">2</span>                  </span><br><span class="line">    sqDistance = sqDiffMat.sum(axis = <span class="number">1</span>)          <span class="comment">#平方和</span></span><br><span class="line">    distance = sqDistance ** <span class="number">0.5</span>               <span class="comment">#测试样本点距离每个样本点的距离</span></span><br><span class="line">    sortedDistance = distance.argsort()          <span class="comment">#将距离按升序排列</span></span><br><span class="line"></span><br><span class="line">    classCount = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        voteLabel = labels[sortedDistance[i]]      <span class="comment">#遍历前k个样本的标签</span></span><br><span class="line">        classCount[voteLabel] = classCount.get(voteLabel,<span class="number">0</span>) + <span class="number">1</span>  <span class="comment">#对标签进行计数，即每一类出现的次数</span></span><br><span class="line">    sortedClassCount = sorted(classCount.items(),key = operator.itemgetter(<span class="number">1</span>),reverse = <span class="keyword">True</span>)  <span class="comment">#将计数后的标签按降序进行排列，得到元组列表</span></span><br><span class="line">    <span class="keyword">return</span> sortedClassCount[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>注：</p><p>[1].shape函数是numpy.core.fromnumeric中的函数，它的功能是读取矩阵的长度，比如shape[0]就是读取矩阵第一维度的长度。在这里可以求出矩阵的行数，也就是样本个数。</p><p>[2].diffMat为差值矩阵</p><p>[3].计算平方差后按行（<a href="https://blog.csdn.net/u012005313/article/details/49153261" target="_blank" rel="noopener">axis=1/0，按行/列相加</a>）相加，再开平方。即可求出距离。</p><p>[4].<a href="https://blog.csdn.net/weixin_38705903/article/details/79231551" target="_blank" rel="noopener">Python get()函数作用</a></p><p>[5]. <code>sorted(classCount.items().key = operator.itemgetter(1),reverse = True)</code>的理解：</p><p><a href="https://www.linuxidc.com/Linux/2013-10/90820.htm" target="_blank" rel="noopener">Python中的sorted函数以及operator.itemgetter函数</a></p><p>[6].计算距离公式为<a href="https://blog.csdn.net/Losteng/article/details/50893931" target="_blank" rel="noopener">欧氏距离公式。</a></p><p>最后，将classCount字典分解为元组列表，然后使用程序第二行导入运算符模块的itemgetter方法，按照第二个元素的次序对元组进行排序 此处的排序为逆序，即按照从最大到最小次序排序，最后返回发生频率最高的元素标签。</p><p>为了预测数据所在分类，在Python提示符中输入下列命令:</p><p><code>&gt;&gt;&gt;kNN.classify0([85,90],group,lalels,3)</code></p><p>结果为A。</p><p>这就是kNN的一个简单实例.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 机器学习实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-FCFS</title>
      <link href="/2019/01/26/Python-FCFS/"/>
      <url>/2019/01/26/Python-FCFS/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ast</span><br><span class="line">f = open(<span class="string">"C:\\ff.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line">ff = f.read()</span><br><span class="line">str1 = ff.replace(<span class="string">"\n"</span>,<span class="string">" "</span>)</span><br><span class="line">list = str1.split(<span class="string">" "</span>)</span><br><span class="line"><span class="comment">#print(str)</span></span><br><span class="line"><span class="comment">#print(list)</span></span><br><span class="line">gettime = [] <span class="comment">#到达时间</span></span><br><span class="line">length = len(list)/<span class="number">3</span></span><br><span class="line"><span class="comment">#print(length)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,int(length)):</span><br><span class="line">    gettime.append(list[<span class="number">1</span>+<span class="number">3</span>*i])</span><br><span class="line">    gettime.sort() <span class="comment">#排序</span></span><br><span class="line"><span class="comment">#print(gettime) -&gt; 到达时间</span></span><br><span class="line">runtime = []</span><br><span class="line">queue = []</span><br><span class="line">liststr = list</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(gettime)):</span><br><span class="line">    s1 = liststr.index(gettime[i])</span><br><span class="line">    s = s1<span class="number">-1</span></span><br><span class="line">    queue.append(liststr[s])</span><br><span class="line">    liststr[s1] = <span class="string">"ss"</span> <span class="comment">#每拿出一个 替换字符 防止重复</span></span><br><span class="line"><span class="comment">#print(liststr)</span></span><br><span class="line"><span class="comment">#print(queue) -&gt; 进程序号</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(queue)):</span><br><span class="line">    <span class="comment">#print(list.index(queue[i]))</span></span><br><span class="line">    indexoflist = list.index(queue[i])+<span class="number">2</span></span><br><span class="line">    runtime.append(list[indexoflist])</span><br><span class="line"><span class="comment">#print(runtime) -&gt; 运行时间</span></span><br><span class="line">endtime = []</span><br><span class="line">endtime.append(ast.literal_eval(gettime[<span class="number">0</span>])+ast.literal_eval(runtime[<span class="number">0</span>]))</span><br><span class="line"><span class="comment">#print(endtime)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(runtime)):</span><br><span class="line">    <span class="keyword">if</span>(endtime[i<span class="number">-1</span>]&gt;ast.literal_eval(gettime[i])):</span><br><span class="line">        endtime.append(endtime[i<span class="number">-1</span>]+ast.literal_eval(runtime[i]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        endtime.append(ast.literal_eval(gettime[i])+ast.literal_eval(runtime[i]))</span><br><span class="line"><span class="comment">#print(endtime[3])</span></span><br><span class="line"><span class="comment">#计算周转时间</span></span><br><span class="line">turnovertime = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range (<span class="number">0</span>,len(endtime)):</span><br><span class="line">    turnovertime.append(endtime[i]-ast.literal_eval(gettime[i]))</span><br><span class="line"><span class="comment">#print(turnovertime)</span></span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(turnovertime)):</span><br><span class="line">    sum += turnovertime[i]</span><br><span class="line"><span class="comment">#print(sum/len(turnovertime))</span></span><br><span class="line">pj_turnovertime = round(sum/len(turnovertime),<span class="number">3</span>)</span><br><span class="line"><span class="comment">#print(pj_turnovertime)</span></span><br><span class="line">summ = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(turnovertime)):</span><br><span class="line">    summ = summ + (turnovertime[i]/ast.literal_eval(runtime[i]))</span><br><span class="line">dq_turnovertime = round(summ/len(turnovertime),<span class="number">3</span>)</span><br><span class="line"><span class="comment">#print(dq_turnovertime)</span></span><br><span class="line"><span class="comment">#print(summ/len(turnovertime))</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"fcfs.txt"</span>,<span class="string">"w"</span>) <span class="keyword">as</span> ff:</span><br><span class="line">    ff.write(<span class="string">"\n进程执行顺序：\n"</span>)</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> queue:</span><br><span class="line">        ff.write(<span class="string">" "</span>+ each)</span><br><span class="line">    ff.write(<span class="string">"\n"</span>)</span><br><span class="line">    ff.write(<span class="string">"\n平均周转时间：\n"</span>+str(pj_turnovertime)+<span class="string">"\n"</span>)</span><br><span class="line">    ff.write(<span class="string">"\n带权周转时间：\n"</span>+str(dq_turnovertime)+<span class="string">"\n"</span>)</span><br><span class="line">f.close()</span><br><span class="line">ff.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP用户注册接口</title>
      <link href="/2019/01/26/PHP%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/"/>
      <url>/2019/01/26/PHP%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>新版本的PHP中mysql_conntent()【regcheck.php】等函数改成了mysqli_conntent()【logincheck.php】，参数也有所变化。但不影响正常使用。出现警告时用函数<code>error_reporting(0)</code>隐藏警告<br><a id="more"></a></p><h4 id="登录-login-php"><a href="#登录-login-php" class="headerlink" title="登录-login.php"></a>登录-login.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"logincheck.php"</span> method=<span class="string">"post"</span>&gt;    </span><br><span class="line"> 用户名：&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span> /&gt;    </span><br><span class="line"> &lt;br /&gt;    </span><br><span class="line"> 密码：&lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span> /&gt;    </span><br><span class="line"> &lt;br /&gt;    </span><br><span class="line"> &lt;input type=<span class="string">"Submit"</span> name=<span class="string">"Submit"</span> value=<span class="string">"登陆"</span> /&gt;    </span><br><span class="line"></span><br><span class="line"> &lt;a href=<span class="string">"register.php"</span>&gt;注册&lt;/a&gt;    </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h4 id="登录检测-logcheck-php："><a href="#登录检测-logcheck-php：" class="headerlink" title="登录检测-logcheck.php："></a>登录检测-logcheck.php：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"Submit"</span>]) &amp;&amp; $_POST[<span class="string">"Submit"</span>] == <span class="string">"登陆"</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            $user = $_POST[<span class="string">"username"</span>];  </span><br><span class="line">            $psw = $_POST[<span class="string">"password"</span>];  </span><br><span class="line">            <span class="keyword">if</span>($user == <span class="string">""</span> || $psw == <span class="string">""</span>)  </span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('请输入用户名或密码！'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span>  </span><br><span class="line">            &#123;  </span><br><span class="line">                $con = mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>);  </span><br><span class="line">                mysqli_select_db($con ,<span class="string">"vt"</span>);  </span><br><span class="line">                mysqli_query($con,<span class="string">"set names 'gbk'"</span>);  </span><br><span class="line">                $sql = <span class="string">"select username,password from user where username = '$_POST[username]' and password = '$_POST[password]'"</span>;  </span><br><span class="line">                $result = mysqli_query($con ,$sql);  </span><br><span class="line">                $num = mysqli_num_rows($result);  </span><br><span class="line">                <span class="keyword">if</span>($num)  </span><br><span class="line">                &#123;  </span><br><span class="line">                    $row = mysqli_fetch_array($result,MYSQLI_NUM);  <span class="comment">//将数据以索引方式储存在数组中  </span></span><br><span class="line">                    <span class="keyword">echo</span> $row[<span class="number">0</span>];  </span><br><span class="line">                &#125;  </span><br><span class="line">                <span class="keyword">else</span>  </span><br><span class="line">                &#123;  </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('用户名或密码不正确！');history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('提交未成功！'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="注册-register-php"><a href="#注册-register-php" class="headerlink" title="注册-register.php:"></a>注册-register.php:</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"regcheck.php"</span> method=<span class="string">"post"</span>&gt;  </span><br><span class="line">    用户名：&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>/&gt;  </span><br><span class="line">    &lt;br/&gt;  </span><br><span class="line">    密　码:&lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span>/&gt;  </span><br><span class="line">    &lt;br/&gt;  </span><br><span class="line">    确认密码：&lt;input type=<span class="string">"password"</span> name=<span class="string">"confirm"</span>/&gt;  </span><br><span class="line">    &lt;br/&gt;  </span><br><span class="line">    &lt;input type=<span class="string">"Submit"</span> name=<span class="string">"Submit"</span> value=<span class="string">"注册"</span>/&gt;  </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h3 id="注册检测-regcheck-php"><a href="#注册检测-regcheck-php" class="headerlink" title="注册检测-regcheck.php:"></a>注册检测-regcheck.php:</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">       error_reporting(<span class="number">0</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"Submit"</span>]) &amp;&amp; $_POST[<span class="string">"Submit"</span>] == <span class="string">"注册"</span>)  </span><br><span class="line">       &#123;  </span><br><span class="line">           $user = $_POST[<span class="string">"username"</span>];  </span><br><span class="line">           $psw = $_POST[<span class="string">"password"</span>];  </span><br><span class="line">           $psw_confirm = $_POST[<span class="string">"confirm"</span>];  </span><br><span class="line">           <span class="keyword">if</span>($user == <span class="string">""</span> || $psw == <span class="string">""</span> || $psw_confirm == <span class="string">""</span>)  </span><br><span class="line">           &#123;  </span><br><span class="line">               <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('请确认信息完整性！'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">           &#125;  </span><br><span class="line">           <span class="keyword">else</span>  </span><br><span class="line">           &#123;  </span><br><span class="line">               <span class="keyword">if</span>($psw == $psw_confirm)  </span><br><span class="line">               &#123;  </span><br><span class="line">                   mysql_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>);   <span class="comment">//连接数据库  </span></span><br><span class="line">                   mysql_select_db(<span class="string">"vt"</span>);  <span class="comment">//选择数据库  </span></span><br><span class="line">                   mysql_query(<span class="string">"set names 'gdk'"</span>); <span class="comment">//设定字符集  </span></span><br><span class="line">                   $sql = <span class="string">"select username from user where username = '$_POST[username]'"</span>; <span class="comment">//SQL语句  </span></span><br><span class="line">                   $result = mysql_query($sql);    <span class="comment">//执行SQL语句  </span></span><br><span class="line">                   $num = mysql_num_rows($result); <span class="comment">//统计执行结果影响的行数  </span></span><br><span class="line">                   <span class="keyword">if</span>($num)    <span class="comment">//如果已经存在该用户  </span></span><br><span class="line">                   &#123;  </span><br><span class="line">                       <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('用户名已存在'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">                   &#125;  </span><br><span class="line">                   <span class="keyword">else</span>    <span class="comment">//不存在当前注册用户名称  </span></span><br><span class="line">                   &#123;  </span><br><span class="line">                       $sql_insert = <span class="string">"insert into user (username,password,phone,address) values('$_POST[username]','$_POST[password]','','')"</span>;  </span><br><span class="line">                       $res_insert = mysql_query($sql_insert);  </span><br><span class="line">                       <span class="comment">//$num_insert = mysql_num_rows($res_insert);  </span></span><br><span class="line">                       <span class="keyword">if</span>($res_insert)  </span><br><span class="line">                       &#123;  </span><br><span class="line">                           <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('注册成功！'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">                       &#125;  </span><br><span class="line">                       <span class="keyword">else</span>  </span><br><span class="line">                       &#123;  </span><br><span class="line">                           <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('系统繁忙，请稍候！'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">                       &#125;  </span><br><span class="line">                   &#125;  </span><br><span class="line">               &#125;  </span><br><span class="line">               <span class="keyword">else</span>  </span><br><span class="line">               &#123;  </span><br><span class="line">                   <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('密码不一致！'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">               &#125;  </span><br><span class="line">           &#125;  </span><br><span class="line">       &#125;  </span><br><span class="line">       <span class="keyword">else</span>  </span><br><span class="line">       &#123;  </span><br><span class="line">           <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('提交未成功！'); history.go(-1);&lt;/script&gt;"</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">   <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP分页</title>
      <link href="/2019/01/26/PHP%E5%88%86%E9%A1%B5/"/>
      <url>/2019/01/26/PHP%E5%88%86%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>数据分页概述<br>需要用到的 PHP基础知识 ：<br>PHP 预定义 $_GET 变量来接收 URL 参数信息，具体参见《PHP $_GET》。<br>if 流程控制，具体参见《PHP if … else 流程控制》。<br>MySQL 数据库表基础知识，具体参见《MySQL 基本概念》。<br>MySQL 数据查询，具体参见《MySQL Select From 查询数据》<br>MySQL 数据查询，具体参见《MySQL LIMIT 限定查询记录数》。<br><a id="more"></a></p></blockquote><h4 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">CREATE TABLE `guestbook` (</span><br><span class="line">  `id` mediumint(8) unsigned NOT NULL auto_increment,</span><br><span class="line">  `nickname` char(15) NOT NULL default &apos;&apos;,</span><br><span class="line">  `email` varchar(100) NOT NULL default &apos;&apos;,</span><br><span class="line">  `content` text NOT NULL,</span><br><span class="line">  `createtime` int(10) unsigned NOT NULL default &apos;0&apos;,</span><br><span class="line">  PRIMARY KEY  (`id`)</span><br><span class="line">) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;</span><br></pre></td></tr></table></figure><h3 id="分页原理"><a href="#分页原理" class="headerlink" title="分页原理"></a>分页原理</h3><p>目的很简单，就是将较多数据记录，分页显示出来，每一页显示设定的数据条数。</p><p>分页显示格式如下：<br><code>共 10 条留言 [1] 2 3</code></p><blockquote><p>该格式比较简单，只显示了总的数据和各个分页数。当前页面显示为 [1] 这样的格式，非当前页面的页数则显示为超链接格式。</p><p>PHP 分页技术核心在于确定当前的页数，然后利用 MySQL 的 LIMIT 关键字来指定输出对应的记录数。<br>如当前是第 1 页时，那么就是 LIMIT 0,4（假设一页输出 4 条记录），第 2 页时，就是 LIMIT 4,4，第 3 页时，就是 LIMIT 8,4 … 依此类推，第 n 页时，就是 LIMIT (n-1)*4,4 。</p><p>而当前页数 $p 这个参数，通过 URL 来获取。如 <code>http://127.0.0.1/guestbook/index.php?p=2</code>这个这个 URL 链接，表示当前为第 2 页，PHP 中通过 $_GET[‘p’] 来取得对应的页数值 2 。而对于首页，则没有 $p 这个参数，那么就设定为默认值 1 即可。</p></blockquote><h3 id="数据库链接及参数设定"><a href="#数据库链接及参数设定" class="headerlink" title="数据库链接及参数设定"></a>数据库链接及参数设定</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数据库连接</span></span><br><span class="line">    $con = @mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"gbook"</span>);  </span><br><span class="line">    <span class="keyword">if</span>(!$con)&#123;  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"数据库连接错误"</span>.mysqli_connect_error());  </span><br><span class="line">    &#125;  </span><br><span class="line">    mysqli_query($con,<span class="string">"set names 'utf8'"</span>);  </span><br><span class="line">    <span class="comment">//显示每页的留言数</span></span><br><span class="line">    $pagesize = <span class="number">4</span>;</span><br></pre></td></tr></table></figure><h3 id="输出当前页数据"><a href="#输出当前页数据" class="headerlink" title="输出当前页数据"></a>输出当前页数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//确定页数p参数</span></span><br><span class="line">@$p = $_GET[<span class="string">'p'</span>]?$_GET[<span class="string">'p'</span>]:<span class="number">1</span>;  </span><br><span class="line"><span class="comment">//数据指针</span></span><br><span class="line">$offset = ($p<span class="number">-1</span>)*$pagesize;  </span><br><span class="line"><span class="comment">//查询本页现实的数据</span></span><br><span class="line">$query_sql = <span class="string">"select \* from guestbook order by id desc limit $offset,$pagesize"</span>;  </span><br><span class="line"><span class="comment"># echo $query\_sql;</span></span><br><span class="line">$result = mysqli_query($con,$query_sql);  </span><br><span class="line"><span class="comment">//循环输出</span></span><br><span class="line"><span class="keyword">while</span>($gblist = mysqli_fetch_array($result))&#123;  </span><br><span class="line">    <span class="keyword">echo</span>  <span class="string">'&lt;a href="'</span>,$gblist[<span class="string">'nickname'</span>],<span class="string">'"&gt;'</span>,$gblist[<span class="string">'nickname'</span>],<span class="string">'&lt;/a&gt;'</span>;  </span><br><span class="line">    <span class="keyword">echo</span>  <span class="string">'发表于：'</span>,date(<span class="string">"Y-m-d H:i"</span>,@$gblist[createtime]),<span class="string">'&lt;br/&gt;'</span>;  </span><br><span class="line">    <span class="keyword">echo</span>  <span class="string">'内容：'</span>,$gblist[<span class="string">'content'</span>],<span class="string">'\&lt;br/&gt;\&lt;hr\&gt;'</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出分页格式"><a href="#输出分页格式" class="headerlink" title="输出分页格式"></a>输出分页格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页代码</span></span><br><span class="line"><span class="comment">//计算留言总数</span></span><br><span class="line">$count_result = mysqli_query($con,<span class="string">"select count(*) as count from guestbook"</span>);  </span><br><span class="line">$count_array = mysqli_fetch_array($count_result);  </span><br><span class="line"></span><br><span class="line"><span class="comment">//计算总的页数</span></span><br><span class="line">$pagenum = ceil($count_array[<span class="string">'count'</span>]/$pagesize);  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">'共'</span>,$count_array[<span class="string">'count'</span>],<span class="string">'条留言'</span>;  </span><br><span class="line"></span><br><span class="line"><span class="comment">//循环输出个页数及链接</span></span><br><span class="line"><span class="keyword">if</span>($pagenum&gt;<span class="number">1</span>)&#123;  </span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">1</span>;$i&lt;=$pagenum;$i++)&#123;  </span><br><span class="line">        <span class="keyword">if</span>($i == $p)&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'['</span>,$i,<span class="string">']'</span>;  </span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            <span class="keyword">echo</span>  <span class="string">' &lt;a href="gbook.php?p='</span>,$i,<span class="string">'"&gt;'</span>,$i,<span class="string">'&lt;/a&gt;'</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//数据库连接</span></span><br><span class="line">    $con = @mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"gbook"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!$con)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"数据库连接错误"</span>.mysqli_connect_error());</span><br><span class="line">    &#125;</span><br><span class="line">    mysqli_query($con,<span class="string">"set names 'utf8'"</span>);</span><br><span class="line">    <span class="comment">//显示每页的留言数</span></span><br><span class="line">    $pagesize = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">//确定页数p参数</span></span><br><span class="line">    @$p = $_GET[<span class="string">'p'</span>]?$_GET[<span class="string">'p'</span>]:<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//数据指针</span></span><br><span class="line">    $offset = ($p<span class="number">-1</span>)*$pagesize;</span><br><span class="line">    <span class="comment">//查询本页现实的数据</span></span><br><span class="line">    $query_sql = <span class="string">"select * from guestbook order by id desc limit $offset,$pagesize"</span>;</span><br><span class="line">    <span class="comment"># echo $query_sql;</span></span><br><span class="line">    $result = mysqli_query($con,$query_sql);</span><br><span class="line">    <span class="comment">//循环输出</span></span><br><span class="line">    <span class="keyword">while</span>($gblist = mysqli_fetch_array($result))&#123;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="string">'&lt;a href="'</span>,$gblist[<span class="string">'nickname'</span>],<span class="string">'"&gt;'</span>,$gblist[<span class="string">'nickname'</span>],<span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="string">'发表于：'</span>,date(<span class="string">"Y-m-d H:i"</span>,@$gblist[createtime]),<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="string">'内容：'</span>,$gblist[<span class="string">'content'</span>],<span class="string">'&lt;br/&gt;&lt;hr/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//分页代码</span></span><br><span class="line">    <span class="comment">//计算留言总数</span></span><br><span class="line">    $count_result = mysqli_query($con,<span class="string">"select count(*) as count from guestbook"</span>);</span><br><span class="line">    $count_array = mysqli_fetch_array($count_result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算总的页数</span></span><br><span class="line">    $pagenum = ceil($count_array[<span class="string">'count'</span>]$pagesize);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'共'</span>,$count_array[<span class="string">'count'</span>],<span class="string">'条留言'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//循环输出个页数及链接</span></span><br><span class="line">    <span class="keyword">if</span>($pagenum&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">1</span>;$i&lt;=$pagenum;$i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>($i == $p)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'['</span>,$i,<span class="string">']'</span>;</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span>  <span class="string">' &lt;a href="gbook.php?p='</span>,$i,<span class="string">'"&gt;'</span>,$i,<span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Samba服务器</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BASamba%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BASamba%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="安装Samba"><a href="#安装Samba" class="headerlink" title="安装Samba"></a>安装Samba</h3><h4 id="查看Samba是否已安装"><a href="#查看Samba是否已安装" class="headerlink" title="查看Samba是否已安装"></a>查看Samba是否已安装</h4><a id="more"></a><p><code>rpm -qa | grep samba</code></p><h4 id="通过yum直接安装Samba服务端和客户端"><a href="#通过yum直接安装Samba服务端和客户端" class="headerlink" title="通过yum直接安装Samba服务端和客户端"></a>通过yum直接安装Samba服务端和客户端</h4><p><code>yum -y install samba samba-client</code></p><h3 id="配置Samba"><a href="#配置Samba" class="headerlink" title="配置Samba"></a>配置Samba</h3><blockquote><p>Samba的主配置文件为<code>/etc/samba/smb.conf</code>，这里主要达到在win下通过帐号登录linux共享即可，复杂的配置可参考最后的地址。直接在<code>smb.conf</code>后加上一段共享块。</p></blockquote><h3 id="编辑samba配置文件"><a href="#编辑samba配置文件" class="headerlink" title="编辑samba配置文件"></a>编辑samba配置文件</h3><p><code>vim /etc/samba/sam.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">        workgroup = WORKGROUP</span><br><span class="line">        server string = Samna test</span><br><span class="line">        netbios = MySamba</span><br><span class="line">        log file = /var/log/samba/log.%m</span><br><span class="line">        max log size = 50</span><br><span class="line">        security = user</span><br><span class="line">        passdb backend = tdbsam</span><br><span class="line">[homes]</span><br><span class="line">        comment = Home Directories</span><br><span class="line">        browseable = yes</span><br><span class="line">        path = /test_samba</span><br><span class="line">        public = yes</span><br><span class="line">        writable = yes</span><br><span class="line">        valid users = @testgp</span><br></pre></td></tr></table></figure><h3 id="建立samba家目录，更改工作组属性，更改读写属性"><a href="#建立samba家目录，更改工作组属性，更改读写属性" class="headerlink" title="建立samba家目录，更改工作组属性，更改读写属性"></a>建立samba家目录，更改工作组属性，更改读写属性</h3><p><code>mkdir /test_samba</code><br><code>groupadd testgp /test_samba</code><br><code>chmod 775 /test_samba</code></p><h3 id="建立samba共享用户并加入testgp组"><a href="#建立samba共享用户并加入testgp组" class="headerlink" title="建立samba共享用户并加入testgp组"></a>建立samba共享用户并加入testgp组</h3><p><code>useradd test -g testgp</code></p><h3 id="给用户test赋予smb服务密码"><a href="#给用户test赋予smb服务密码" class="headerlink" title="给用户test赋予smb服务密码"></a>给用户test赋予smb服务密码</h3><p><code>smbpasswd -a test</code></p><h3 id="关闭防火墙，防止干扰smb"><a href="#关闭防火墙，防止干扰smb" class="headerlink" title="关闭防火墙，防止干扰smb"></a>关闭防火墙，防止干扰smb</h3><p><code>service iptables stop</code></p><h3 id="开启samba"><a href="#开启samba" class="headerlink" title="开启samba"></a>开启samba</h3><p><code>service smb start</code></p><hr><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>windows <code>win+r</code> ，输入<code>\\[ipaddress]\home</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建DHCP服务器</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BADHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BADHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>yum install dhcp</code><br><a id="more"></a></p><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><blockquote><p>首先拷贝配置文件到<code>/etc/dhcp/dhcpd.conf</code>目录下，注意，新版默认目录<code>/etc/dhcp/dhcpd.conf</code>旧版是<code>/etc/dhcpd.conf</code><br>注意DNS后缀名是在<code>option domain-nam</code>e里配置，这个跟KMS自动激活关系很大<br>如果不配置默认后缀l<code>ocaldomain</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/doc/dhcp-4.1.1/dhcpd.conf.sample /etc/dhcp/dhcpd.conf \#新版的这里改路径了注意</span><br><span class="line">vi /etc/dhcp/dhcpd.conf</span><br></pre></td></tr></table></figure><p>DHCP服务器IP配置成<code>192.168.16.128</code><br>写入如下文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">subnet 192.168.16.128 netmask 255.255.255.0 &#123;</span><br><span class="line">  range 192.168.16.1 192.168.16.254;</span><br><span class="line">  option domain-name-servers ns.testlan.com;</span><br><span class="line">  option domain-name &quot;testlan.com&quot;;</span><br><span class="line">  option routers 192.168.16.128;</span><br><span class="line">  option broadcast-address 192.168.16.128;</span><br><span class="line">  default-lease-time 600;</span><br><span class="line">  max-lease-time 7200;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">host dhcpserver &#123;</span><br><span class="line">  hardware ethernet 00:0C:29:54:FF:37;</span><br><span class="line">  fixed-address 192.168.16.128;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动DHCP"><a href="#启动DHCP" class="headerlink" title="启动DHCP"></a>启动DHCP</h3><p><code>service dhcpd restart</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Seafile网盘</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BASeafile%E7%BD%91%E7%9B%98/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BASeafile%E7%BD%91%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h3 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h3><p>在 <code>Debian/Ubuntu</code> 系统下，可以使用以下命令安装 MySQL：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure></p><p>使用以下命令安装 Python 相关依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python2.7 python-setuptools python-imaging python-ldap python-mysqldb python-memcache python-urllib3</span><br></pre></td></tr></table></figure><h3 id="为-Seafile-创建一个用户"><a href="#为-Seafile-创建一个用户" class="headerlink" title="为 Seafile 创建一个用户"></a>为 Seafile 创建一个用户</h3><p><code>sudo useradd -m -s /bin/bash seafile</code><br>为该用户设置密码：<br><code>sudo passwd seafile</code></p><h3 id="下载Seafile"><a href="#下载Seafile" class="headerlink" title="下载Seafile"></a>下载Seafile</h3><p><code>su - seafile &amp;&amp; cd ~</code><br><code>wget http://seafile-downloads.oss-cn-shanghai.aliyuncs.com/seafile-server_6.1.1_i386.tar.gz</code><br>解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf seafile-server_*</span><br><span class="line">mv seafile-server-*/ seafile-server/</span><br></pre></td></tr></table></figure><h3 id="配置-Seafile"><a href="#配置-Seafile" class="headerlink" title="配置 Seafile"></a>配置 Seafile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd seafile-server*</span><br><span class="line">./setup-seafile-mysql.sh</span><br></pre></td></tr></table></figure><p>其中：<br><code>This server&#39;s ip or domain</code> 字段输入IP地址<br>mysql 的 <code>root password</code> 字段输入数据库密码。<br>其他字段一路回车使用默认值。</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./seafile.sh start</span><br><span class="line">./seahub.sh start</span><br></pre></td></tr></table></figure><p>其中 <code>admin email</code>设置为您登录网盘的帐号，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin@qcloudlab.wang</span><br></pre></td></tr></table></figure><p><code>admin password</code> 和 <code>admin password again</code>设置为登录网盘的密码，如<code>admin_XgkyME9Q</code></p><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>登录的帐号密码为启动 Seafile 步骤中设置的邮箱和密码。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建LAMP环境</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BALAMP%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BALAMP%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="搭建-MySQL-数据库"><a href="#搭建-MySQL-数据库" class="headerlink" title="搭建 MySQL 数据库"></a>搭建 MySQL 数据库</h3><a id="more"></a><ul><li>安装 MySQL<br>使用 <code>yum</code>安装 MySQL<br><code>yum install mysql-server -y</code><br>安装完成后，启动<code>MySQL</code>服务：<br><code>service mysqld restart</code><br>设置 MySQL 账户 root 密码：<br><code>/usr/bin/mysqladmin -u root password &#39;HYEk1y_5&#39;</code></li></ul><h3 id="安装-Apache服务"><a href="#安装-Apache服务" class="headerlink" title="安装 Apache服务"></a>安装 Apache服务</h3><ul><li>安装 Apache<br>使用<code>yum</code>安装 Apache<br><code>yum install httpd -y</code><br>启动<code>Apache</code> 服务：<br><code>service httpd start</code></li></ul><h3 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h3><ul><li>安装 PHP 和 PHP-MYSQL 支持工具：<br>使用 <code>yum</code> 安装 PHP：<br><code>yum install php php-mysql -y</code></li><li>检验 PHP 是否安装成功<br>我们在 <code>/var/www/html</code>目录下创建一个<code>info.php</code>文件来检查php是否安装成功，示例代码参考如下<br><code>&lt;?php phpinfo(); ?&gt;</code><br>重启 Apache 服务：<br><code>service httpd restart</code><br>此时，访问<code>http://127.0.0.1/info.php</code>可浏览到我们刚刚创建的 info.php 页面了</li></ul><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建DNS服务器</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="安装bind"><a href="#安装bind" class="headerlink" title="安装bind"></a>安装bind</h3><p><code>yum -y install bind</code><br><a id="more"></a></p><h3 id="备份named-conf"><a href="#备份named-conf" class="headerlink" title="备份named.conf"></a>备份<code>named.conf</code></h3><p><code>cp /etc/named.conf /etc/named.conf.backup</code></p><h3 id="修改named-conf"><a href="#修改named-conf" class="headerlink" title="修改named.conf"></a>修改<code>named.conf</code></h3><p><code>vim /etc/named.conf</code></p><p>根据下面的内容修改，wq保存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">    # 监听在主机的53端口上。any代表监听所有的主机</span><br><span class="line">    listen-on port 53 &#123; any; &#125;;</span><br><span class="line">    listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line"></span><br><span class="line">    # 如果此档案底下有规范到正反解的zone file 档名时，该档名预设应该放置在哪个目录底下</span><br><span class="line">    directory     &quot;/var/named&quot;;</span><br><span class="line"></span><br><span class="line">    # 下面三项是服务的相关统计信息</span><br><span class="line">    dump-file     &quot;/var/named/data/cache\_dump.db&quot;;</span><br><span class="line">    statistics-file &quot;/var/named/data/named\_stats.txt&quot;;</span><br><span class="line">    memstatistics-file &quot;/var/named/data/named\_mem\_stats.txt&quot;;</span><br><span class="line"></span><br><span class="line">    # 谁可以对我的DNS服务器提出查询请求。any代表任何人</span><br><span class="line">    allow-query     &#123; any; &#125;;</span><br><span class="line"></span><br><span class="line">    \* - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion. - If you are building a RECURSIVE (caching) DNS server, you need to enable recursion. - If your recursive DNS server has a public IP address, you MUST enable access control to limit queries to your legitimate users. Failing to do so will cause your server to become part of large scale DNS amplification attacks. Implementing BCP38 within your network would greatly reduce such attack surface */</span><br><span class="line">    recursion yes;</span><br><span class="line"></span><br><span class="line">    dnssec-enable yes;</span><br><span class="line">    dnssec-validation yes;</span><br><span class="line"></span><br><span class="line">        dnssec-lookaside auto;</span><br><span class="line">        forwarders &#123;</span><br><span class="line">           \# 指定上层DNS服务器（网关）</span><br><span class="line">           192.168.1.1;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    \* Path to ISC DLV key */</span><br><span class="line">    bindkeys-file &quot;/etc/named.iscdlv.key&quot;;</span><br><span class="line"></span><br><span class="line">    managed-keys-directory &quot;/var/named/dynamic&quot;;</span><br><span class="line"></span><br><span class="line">    pid-file &quot;/run/named/named.pid&quot;;</span><br><span class="line">    session-keyfile &quot;/run/named/session.key&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file &quot;data/named.run&quot;;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;.&quot; IN &#123;</span><br><span class="line">    type hint;</span><br><span class="line">    file &quot;named.ca&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include &quot;/etc/named.rfc1912.zones&quot;;</span><br><span class="line">include &quot;/etc/named.root.key&quot;;</span><br></pre></td></tr></table></figure><h3 id="增加zone信息"><a href="#增加zone信息" class="headerlink" title="增加zone信息"></a>增加zone信息</h3><p><code>vim /etc/named.rfc1912.zones</code><br>添加下面的内容，wq保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">zone &quot;test.com&quot; IN &#123;    </span><br><span class="line">       # 定义要解析主域名</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;test.com.zone&quot;;  </span><br><span class="line">       # 具体相关解析的配置文件保存在 /var/named/test.com.zone 文件中</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="创建test-com-zone"><a href="#创建test-com-zone" class="headerlink" title="创建test.com.zone"></a>创建<code>test.com.zone</code></h3><p><code>vim /var/named/test.com.zone</code><br>需要解析test.com、<a href="http://www.test.com、abc.test.com，添加下面的内容，wq保存" target="_blank" rel="noopener">www.test.com、abc.test.com，添加下面的内容，wq保存</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$TTL 1D</span><br><span class="line">@       IN SOA          test.com. root (</span><br><span class="line">                                        1       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        0 )     ; minimum</span><br><span class="line"></span><br><span class="line">        IN      NS      test.com</span><br><span class="line">        IN      A       192.168.5.1</span><br><span class="line">www     IN      A       192.168.5.1</span><br><span class="line">print   IN      A       192.168.5.1</span><br></pre></td></tr></table></figure><h3 id="修改该文件权限"><a href="#修改该文件权限" class="headerlink" title="修改该文件权限"></a>修改该文件权限</h3><p><code>chown root:named test.com.zone</code></p><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><p><code>systemctl restart named</code></p><h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><p><code>systemctl enable named</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=53/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=53/udp --permanent</span><br><span class="line">firewall-cmd --add-port=953/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>关闭selinux<br>修改SELNUX的值，wq保存。</p><p><code>SELINUX=disabled</code></p><h3 id="重启-1"><a href="#重启-1" class="headerlink" title="重启"></a>重启</h3><p><code>shutdown -r now</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建NFS系统</title>
      <link href="/2019/01/26/%E6%90%AD%E5%BB%BANFS%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/01/26/%E6%90%AD%E5%BB%BANFS%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="在A机上安装-NFS-服务器所需的软件包："><a href="#在A机上安装-NFS-服务器所需的软件包：" class="headerlink" title="在A机上安装 NFS 服务器所需的软件包："></a>在A机上安装 NFS 服务器所需的软件包：</h3><a id="more"></a><p><code>yum install -y nfs-utils</code></p><p>（实际上需要安装两个包nfs-utils和rpcbind, 不过当使用yum安装nfs-utils时会把rpcbind一起安装上）</p><h3 id="编辑exports文件，添加从机"><a href="#编辑exports文件，添加从机" class="headerlink" title="编辑exports文件，添加从机"></a>编辑exports文件，添加从机</h3><p><code>vim /etc/exports</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/nfs 192.168.222.201(rw,sync,fsid=0)  192.168.222.202(rw,sync,fsid=0)</span><br></pre></td></tr></table></figure><blockquote><p>配置说明：</p></blockquote><p>这一行分为三个部分：</p><p>第一部分：<code>/home/nfs</code> ，这个是本地要共享出去的目录。</p><p>第二部分：<code>192.168.222.0/24</code>，允许访问的主机，可以是一个IP：<code>192.168.222.201</code>，也可以是一个IP段：<code>192.168.222.0/24</code></p><p>第三部分：括号中部分。</p><p><code>rw</code>表示可读写，<code>ro</code>只读；</p><p><code>sync</code>：同步模式，内存中数据时时写入磁盘；<code>async</code> ：不同步，把内存中数据定期写入磁盘中；</p><p><code>no_root_squash</code> ：加上这个选项后，root用户就会对共享的目录拥有至高的权限控制，就像是对本机的目录操作一样。不安全，不建议使用；root_squash：和上面的选项对应，root用户对共享目录的权限不高，只有普通用户的权限，即限制了root；<code>all_squash</code>：不管使用NFS的用户是谁，他的身份都会被限定成为一个指定的普通用户身份；</p><p><code>anonuid/anongid</code> ：要和<code>root_squash</code>以及<code>all_squash</code>一同使用，用于指定使用NFS的用户限定后的uid和gid，前提是本机的<code>/etc/passwd</code>中存在这个uid和gid。</p><p><code>fsid=0</code>表示将<code>/home/nfs</code>整个目录包装成根目录</p><p>这个配置文件也可以这样写：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/test/ 192.168.222.0/24(rw,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><br></pre></td></tr></table></figure><h3 id="启动A机上nfs服务"><a href="#启动A机上nfs服务" class="headerlink" title="启动A机上nfs服务"></a>启动A机上nfs服务</h3><p>先为rpcbind和nfs做开机启动：<br><code>systemctl enable rpcbind.service</code><br><code>systemctl enable nfs-server.service</code></p><p>然后分别启动rpcbind和nfs服务：<br><code>systemctl start rpcbind.service</code><br><code>systemctl start nfs-server.service</code></p><p>确认NFS服务器启动成功：<br><code>rpcinfo -p</code><br>通过查看service列中是否有nfs服务来确认NFS是否启动。</p><p><code>showmount -e 192.168.222.200</code></p><p>查看可挂载目录及可连接的IP</p><h3 id="关闭A机上的防火墙或者给防火墙配置nfs的通过规则"><a href="#关闭A机上的防火墙或者给防火墙配置nfs的通过规则" class="headerlink" title="关闭A机上的防火墙或者给防火墙配置nfs的通过规则"></a>关闭A机上的防火墙或者给防火墙配置nfs的通过规则</h3><p>还是关闭简单啊！</p><p><code>systemctl stop firewalld.service</code></p><h3 id="在B，C机上配置clinet端"><a href="#在B，C机上配置clinet端" class="headerlink" title="在B，C机上配置clinet端"></a>在B，C机上配置clinet端</h3><h3 id="安装nfs，并启动服务。"><a href="#安装nfs，并启动服务。" class="headerlink" title="安装nfs，并启动服务。"></a>安装nfs，并启动服务。</h3><p><code>yum install -y nfs-utils</code></p><p><code>systemctl enable rpcbind.service</code></p><p><code>systemctl start rpcbind.service</code></p><p>客户端不需要启动nfs服务，只需要启动rpcbind服务.</p><h3 id="检查-NFS-服务器端是否有目录共享"><a href="#检查-NFS-服务器端是否有目录共享" class="headerlink" title="检查 NFS 服务器端是否有目录共享"></a>检查 NFS 服务器端是否有目录共享</h3><p><code>showmount -e 192.168.222.200</code></p><h3 id="使用-mount-挂载A服务器端的目录-home-nfs到客户端B的目录-home-nfs下"><a href="#使用-mount-挂载A服务器端的目录-home-nfs到客户端B的目录-home-nfs下" class="headerlink" title="使用 mount 挂载A服务器端的目录/home/nfs到客户端B的目录/home/nfs下"></a>使用 mount 挂载A服务器端的目录<code>/home/nfs</code>到客户端B的目录<code>/home/nfs</code>下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]\# mkdir /home/nfs</span><br><span class="line">[root@localhost ~]\# mount -t nfs 192.168.222.200:/home/nfs/ /home/nfs/</span><br><span class="line">[root@localhost ~]\# df -h</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">文件系统                  容量  已用  可用 已用% 挂载点    </span><br><span class="line">/dev/mapper/CentOS-root 11G 1.3G 9.1G 13% /    </span><br><span class="line">devtmpfs                  911M    0  911M    0% /dev    </span><br><span class="line">tmpfs                      921M    0  921M    0% /dev/shm    </span><br><span class="line">tmpfs                      921M  8.5M  912M    1% /run    </span><br><span class="line">tmpfs                      921M    0  921M    0% /sys/fs/cgroup    </span><br><span class="line">/dev/sda1                  497M  170M  328M  35% /boot    </span><br><span class="line">tmpfs                      185M    0  185M    0% /run/user/0    </span><br><span class="line">192.168.222.200:/home/nfs  11G  1.3G  9.1G  13% /home/nfs</span><br></pre></td></tr></table></figure><p>挂载完成，可以正常访问本机下的<code>/home/nf</code>s，如果在服务端A在共享目录<code>/home/nfs</code>中写入文件，B、C机上可以看到，但是不能在这个目录中写入文件.</p><h3 id="在服务器端A再建立一个共享目录，并且可以允许A、B、C写入共享目录"><a href="#在服务器端A再建立一个共享目录，并且可以允许A、B、C写入共享目录" class="headerlink" title="在服务器端A再建立一个共享目录，并且可以允许A、B、C写入共享目录"></a>在服务器端A再建立一个共享目录，并且可以允许A、B、C写入共享目录</h3><h3 id="在B、C机上取得root用户ID号"><a href="#在B、C机上取得root用户ID号" class="headerlink" title="在B、C机上取得root用户ID号"></a>在B、C机上取得root用户ID号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]\# id root</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br></pre></td></tr></table></figure><h3 id="在A服务器上再建立一个共享目录"><a href="#在A服务器上再建立一个共享目录" class="headerlink" title="在A服务器上再建立一个共享目录"></a>在A服务器上再建立一个共享目录</h3><p><code>mkdir /home/nfs1</code></p><p><code>vim /etc/exports</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/home/nfs 192.168.222.201(rw,sync,fsid=0) 192.168.222.202(rw,sync,fsid=0)    </span><br><span class="line">/home/nfs1 192.168.222.0/24(rw,sync,all_squash,anonuid=0,anongid=0)</span><br></pre></td></tr></table></figure><p>加入第二行，<code>anonuid=0,anongid=0</code>即为root用户id。</p><h3 id="让修改过的配置文件生效"><a href="#让修改过的配置文件生效" class="headerlink" title="让修改过的配置文件生效"></a>让修改过的配置文件生效</h3><p><code>exportfs –arv</code></p><p>使用<code>exportfs</code>命令，当改变<code>/etc/exports</code>配置文件后，不用重启nfs服务直接用这个exportfs即可，它的常用选项为<code>[-aruv]</code>.<br>-a ：全部挂载或者卸载；<br>-r ：重新挂载；<br>-u ：卸载某一个目录；<br>-v ：显示共享的目录；</p><h3 id="查看新的可挂载目录及可连接的IP"><a href="#查看新的可挂载目录及可连接的IP" class="headerlink" title="查看新的可挂载目录及可连接的IP"></a>查看新的可挂载目录及可连接的IP</h3><p><code>showmount -e 192.168.222.200</code></p><h3 id="在B、C-clinet端新挂载一个目录"><a href="#在B、C-clinet端新挂载一个目录" class="headerlink" title="在B、C clinet端新挂载一个目录"></a>在B、C clinet端新挂载一个目录</h3><p><code>showmount -e 192.168.222.200 #查看新的挂载共享目录是否有了。</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir nfs1   </span><br><span class="line">mount -t nfs 192.168.222.200:/home/nfs1/ /home/nfs1/    </span><br><span class="line">ll / &gt;/home/nfs1/ll.txt  \#测试向新的共享目录中可以写入文件了。</span><br></pre></td></tr></table></figure><p>（卸载挂载：<code>umount /home/nfs1/</code>)</p><h3 id="想在客户机B、C上实现开机挂载，则需要编辑-etc-fstab："><a href="#想在客户机B、C上实现开机挂载，则需要编辑-etc-fstab：" class="headerlink" title="想在客户机B、C上实现开机挂载，则需要编辑/etc/fstab："></a>想在客户机B、C上实现开机挂载，则需要编辑/etc/fstab：</h3><p><code>vim /etc/fstab</code></p><p>加入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.222.200:/home/nfs                  /home/nfs    nfs    nolock  0 0   </span><br><span class="line">192.168.222.200:/home/nfs1              /home/nfs1  nfs    nolock  0 0</span><br></pre></td></tr></table></figure><p>保存后，重新挂载</p><p><code>mount -a</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自制一个屏蔽百度广告的chrom插件</title>
      <link href="/2019/01/26/%E8%87%AA%E5%88%B6%E4%B8%80%E4%B8%AA%E5%B1%8F%E8%94%BD%E7%99%BE%E5%BA%A6%E5%B9%BF%E5%91%8A%E7%9A%84chrom%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/01/26/%E8%87%AA%E5%88%B6%E4%B8%80%E4%B8%AA%E5%B1%8F%E8%94%BD%E7%99%BE%E5%BA%A6%E5%B9%BF%E5%91%8A%E7%9A%84chrom%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><em>先看看百度的糟心广告</em></p><p><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjsun9tr0j316k10yk57.jpg" alt="">*</p><ul><li>审查元素<br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjt06576cj31ic0fo7dl.jpg" alt=""></li><li>我们发现 搜索的结果标签包裹class顺序为 :</li></ul><p><code>container_l</code> -&gt;<code>content_left</code> -&gt; <code>result c-container</code> （正常的页面标签都有同样的class）<br>-&gt; <code>RQjFDh</code>（广告页面的标签无规律）</p><ul><li>我们只需要把正常class过滤掉，然后对剩下的标签进行处理（<code>height = 0</code>），再调整边距即可。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/* * 筛选出广告页面，将高度设置为0 达到隐藏效果 * 消除广告的margin-botton */</span><br><span class="line"></span><br><span class="line">#content_left&gt;div:not(.c-container) &#123;</span><br><span class="line">    height: 0;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    margin-bottom: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#content_left&gt;div.leftBlock, .hit_top_new &#123;</span><br><span class="line">    height: auto;</span><br><span class="line">/* overflow: auto; margin-bottom: auto;*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>写<code>mainfast.json</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;content_scripts&quot;: [ &#123;</span><br><span class="line">      &quot;css&quot;: [ &quot;FkBaiDuAd.css&quot; ],</span><br><span class="line">      &quot;matches&quot;: [ &quot;*://www.baidu.com/*&quot; ]</span><br><span class="line">   &#125; ],</span><br><span class="line">   &quot;description&quot;: &quot;Using Baidu is the beginning of the fall!&quot;,</span><br><span class="line">   &quot;icons&quot;: &#123;</span><br><span class="line">      &quot;128&quot;: &quot;icon.png&quot;</span><br><span class="line">   &#125;,</span><br><span class="line">   &quot;manifest_version&quot;: 2,</span><br><span class="line">   &quot;name&quot;: &quot;FkBaiDuAd&quot;,</span><br><span class="line">   &quot;permissions&quot;: [ &quot;*://www.baidu.com/*&quot; ],</span><br><span class="line">   &quot;version&quot;: &quot;1.0.0&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>具体的规则：<a href="https://lavas.baidu.com/pwa/engage-retain-users/add-to-home-screen/introduction" target="_blank" rel="noopener">mainfest.json</a></li><li>打包上传启用</li></ul><p><em>最后看看效果</em><br><img src="http://ww1.sinaimg.cn/large/006Uvlfaly1fzjt0uwtzwj316k10yk57.jpg" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
            <tag> chrome插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次上岸</title>
      <link href="/2019/01/26/%E4%B8%80%E6%AC%A1%E4%B8%8A%E5%B2%B8/"/>
      <url>/2019/01/26/%E4%B8%80%E6%AC%A1%E4%B8%8A%E5%B2%B8/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="2010"><a href="#2010" class="headerlink" title="2010"></a>2010</h2><hr><ul><li>递归求二叉树深度<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetTreeHeight</span><span class="params">(BTree T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left_deep;</span><br><span class="line">    <span class="keyword">int</span> right_deep;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    left_deep = GetTreeHeight(T-&gt;lchid);</span><br><span class="line">    right_deep = GetTreeHeight(T-&gt;rchild);</span><br><span class="line">    (left_deep&gt;right_deep)?<span class="keyword">return</span> left_deep+<span class="number">1</span>:right_deep+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>荷兰旗问题<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Holland</span><span class="params">(<span class="keyword">char</span> <span class="built_in">list</span>[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> current = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> begin = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> end = N<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(cuuent&lt;=end)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">list</span>[current] == <span class="string">"red"</span>)&#123;<span class="comment">//红色应在前面，交换begin和current的值，begin和current向后移动</span></span><br><span class="line">            swap(<span class="built_in">list</span>[current],<span class="built_in">list</span>[begin]);</span><br><span class="line">            begin++;</span><br><span class="line">            current++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">list</span>[current] == <span class="string">"white"</span>)&#123;<span class="comment">//白色，在中间，current向后移动</span></span><br><span class="line">            current++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//蓝色，应在最后，交换current和last，last向前移动，current向后移动</span></span><br><span class="line">            swap(<span class="built_in">list</span>[current],<span class="built_in">list</span>[last]);</span><br><span class="line">            last--;</span><br><span class="line">            curretn++;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2011"><a href="#2011" class="headerlink" title="2011"></a>2011</h2><ul><li><p>冒泡排序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(ElemType A[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=n<span class="number">-1</span>;j&gt;i;j--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(A[j<span class="number">-1</span>].key&gt;A[j].key)&#123;</span><br><span class="line">                swap(A[j<span class="number">-1</span>],A[j]);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用图的遍历算法判断连通图是否存在回路</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * visited[] =&gt; 访问标记数组</span></span><br><span class="line"><span class="comment"> * visited[i]=1 =&gt; 当前节点已访问</span></span><br><span class="line"><span class="comment"> * visited[i]=0 =&gt; 当前节点正在访问</span></span><br><span class="line"><span class="comment"> * visited[i]=-1 =&gt; 当前节点未访问</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">exitCyclePath</span><span class="params">(Graph G,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;G.vexnum;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[i])&#123; <span class="comment">//顶点未访问</span></span><br><span class="line">            visited[i] = <span class="number">0</span>; <span class="comment">//准备访问</span></span><br><span class="line">            <span class="keyword">if</span>(DFNSCheck(G,v))</span><br><span class="line">                <span class="keyword">return</span> TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DFSCheck</span><span class="params">(Graph G,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(visited[v]!=<span class="number">0</span>)&#123;</span><br><span class="line">        visited[v]=<span class="number">1</span>;   <span class="comment">//除正在访问的节点外，其余节点访问时访问标记都为1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(w=FirstAdjvex(G,v);w&gt;=<span class="number">0</span>;W=NextAdjvex(G,w,v))&#123;</span><br><span class="line">        <span class="keyword">if</span>(visited[w] == <span class="number">0</span>)&#123;</span><br><span class="line">            flag = TRUE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            DFSCheck(G,w)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    visited[v] = <span class="number">1</span>; <span class="comment">//当前节点访问结束</span></span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2012"><a href="#2012" class="headerlink" title="2012"></a>2012</h2><ul><li><p>正负排序问题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">asjust</span><span class="params">(Sqlist &amp;l)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> front = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> last = l.size<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(front &lt;= last)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l.data[front]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            swap(l.data[front],l.data[last]);</span><br><span class="line">            last--;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            front++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>二叉排序树合并</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(BiTree *A,BiTree *B)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(A=null)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    BiTree *p = A;</span><br><span class="line">    <span class="keyword">while</span>(p&gt;lchid)&#123;</span><br><span class="line">        p = p-&gt;lchild;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;lchild = B;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="2013"><a href="#2013" class="headerlink" title="2013"></a>2013</h2><ul><li>计数排序<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">countSort</span><span class="params">(Sqlist A,Sqlist B)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,count;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;A.size;i++)&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j&lt;A.size;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(A.data[i]&gt;A.data[j])&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        B.data[count] = A.data[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>huffman编码长度<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxHuffmanCode</span><span class="params">(HuffmanTree HT,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>；</span><br><span class="line">        <span class="keyword">int</span> j = i;</span><br><span class="line">        <span class="keyword">while</span>(j.parent!=<span class="number">0</span>)&#123;</span><br><span class="line">            j = j.parent;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max&lt;len)&#123;</span><br><span class="line">            max = len;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="2014"><a href="#2014" class="headerlink" title="2014"></a>2014</h2><ul><li>双向冒泡排序<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(Sqlist &amp;a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = a.size<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=left;i&lt;right;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;a[a[i+<span class="number">1</span>]])&#123;</span><br><span class="line">                swap(a[i],a[i+<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        right--;</span><br><span class="line">        <span class="keyword">for</span>(j=right;j&gt;left;j--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;j[j<span class="number">-1</span>])&#123;</span><br><span class="line">                swap(a[j],a[j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        left++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>返回兄弟节点<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BiTree* <span class="title">BrotherNode</span><span class="params">(BiTree T,Bitree*q)</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span> &lt;CSNode&gt; Q;</span><br><span class="line">    Q.push(T);</span><br><span class="line">    <span class="keyword">while</span>(!Q.empty())&#123;</span><br><span class="line">        p = Q.pop();</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchid==q||p-&gt;rchild==q)&#123;</span><br><span class="line">            <span class="keyword">return</span> ((p-&gt;lchild == q)?p-&gt;rchild:p-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild)&#123;</span><br><span class="line">            Q.push(p-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild)&#123;</span><br><span class="line">            Q.push(p-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2015"><a href="#2015" class="headerlink" title="2015"></a>2015</h2><hr><ul><li><p>路径可达问题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> w = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">PathFind</span><span class="params">(MGraph &amp;G)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;G.vexnum;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;G.vexnum;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(DfsFindPath(G,i,j))&#123;</span><br><span class="line">                    flag = <span class="number">0</span>; <span class="comment">//每次执行完如果返回存在目标节点后flag初始化</span></span><br><span class="line">                    count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DfsFindPath</span><span class="params">(Graph G,<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> flag;<span class="comment">//如果在后续递归中找到了目标节点，直接返回</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(w = FirstAdjvex(G,i);w&gt;=<span class="number">0</span>;w=NextAdjvex(G,i,w))&#123;</span><br><span class="line">        <span class="keyword">if</span>(w==j)&#123;</span><br><span class="line">            flag = <span class="number">1</span>;   <span class="comment">//找到目标节点</span></span><br><span class="line">            <span class="keyword">return</span> flag;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!visited[w])&#123;</span><br><span class="line">            DfsFindPath(G,w,j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag; <span class="comment">//for循环结束flag仍未执行说明节点不符合条件，return flag === return 0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>排序链表</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateLinkList</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> n,LinkList &amp;L)</span></span>&#123;</span><br><span class="line">    LinkList *q;</span><br><span class="line">    LinkList *p = L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span> &amp;&amp; p-&gt;next-&gt;data &lt; A[i])&#123;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;<span class="comment">//退出while说明找到了p-&gt;next-&gt;data &gt; A[i] || p-&gt;next =null,此时在表尾插入</span></span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">        s = (LinkList*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">        <span class="comment">//插入</span></span><br><span class="line">        s-&gt;data = A[i];</span><br><span class="line">        s-&gt;next = q;</span><br><span class="line">        p-&gt;next = s;</span><br><span class="line">        p = L;<span class="comment">//重置p</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h3><ul><li>图非递归遍历</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UnrecDFSTraverse</span><span class="params">(MGraph G,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> n = G.n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        vistited[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    s.push(v);</span><br><span class="line">    <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">        p = s.pop()</span><br><span class="line">        visited();</span><br><span class="line">        <span class="keyword">for</span>(w=FirstAdjVex(G,p);w&gt;=<span class="number">0</span>;w=NextAdjVex(G,p,w))&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vistied[p])&#123;</span><br><span class="line">                s.push(p)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ul><li>求树叶节点</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">OutPutLeaves</span><span class="params">(CSTree T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    CSNode *p;</span><br><span class="line">    <span class="built_in">queue</span> &lt;CSNode&gt; q;</span><br><span class="line">    q.push(T);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        p = q.pop();</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;firstnode == <span class="literal">NULL</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            q.push(p-&gt;firstnode);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;nextsilbing)&#123;</span><br><span class="line">            q.push(p-&gt;nextsilbing);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h3><ul><li>判断AVL树<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(BiTNode *T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> left_depth = TreeDepth(T-&gt;lchid);</span><br><span class="line">    <span class="keyword">int</span> right_depth = TreeDepth(T-&gt;rchild);</span><br><span class="line">    <span class="keyword">return</span> (left_depth&gt;right_depth?(left_depth+<span class="number">1</span>):(right_depth+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isBalanced</span><span class="params">(BiTNode *T,<span class="keyword">int</span> &amp;h)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> left_depth = TreeDepth(T-&gt;lchid);</span><br><span class="line">    <span class="keyword">int</span> right_depth = TreeDepth(T-&gt;rchild);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> balance_flag_left = isBalanced(T-&gt;lchild,left_depth);</span><br><span class="line">    <span class="keyword">bool</span> balance_flag_right = isBalanced(T-&gt;right,right_depth);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(balance_flag_left &amp;&amp; lablace_flag_right)&#123;</span><br><span class="line">        <span class="keyword">int</span> drect = right_depth - left_depth;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(drect)&lt;<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> TURE;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>背包问题<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">int</span>&lt;<span class="built_in">stack</span>&gt; s;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KNAP</span><span class="params">(<span class="keyword">int</span> T,<span class="keyword">int</span> w[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> current -= w[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">    s.push(w[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">while</span>(!s.empty() &amp;&amp; i&lt;n )&#123;</span><br><span class="line">        <span class="keyword">if</span>(current - w[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            s.push(w[i]);</span><br><span class="line">            current -= w[i];</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(current - w[i] == <span class="number">0</span>)&#123;</span><br><span class="line">            s.push(w[i]);</span><br><span class="line">            <span class="comment">//符合条件 打印出栈</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"有这种方案：/n"</span>);</span><br><span class="line">            <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">                i = s.pop();</span><br><span class="line">                print(<span class="string">"%d/n"</span>,i);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (current - w[i] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                t = s.pop();</span><br><span class="line">                current -= current+t</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//while结束没有return表示没有这种方案</span></span><br><span class="line">    print(<span class="string">"未找到解决方案"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h3><ul><li>后序遍历树<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ForestPostOrderK</span><span class="params">(CSTree T, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span> || k &gt; n || k &lt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    CSTree p = T;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        p = p.nextsilbing;</span><br><span class="line">    &#125;<span class="comment">//找到第k颗树</span></span><br><span class="line">    PostOrder(p);   <span class="comment">//后序访问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(CSTree T)</span></span>&#123;   <span class="comment">//树的后序 == 二叉树的中序</span></span><br><span class="line">    <span class="keyword">if</span>(T != null)&#123;</span><br><span class="line">        PostOrder(T.firstchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,T.data);</span><br><span class="line">        PostOrder(T.nextsilbing);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>k步内可到达<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Disgraph</span><span class="params">(MGraph G,<span class="keyword">int</span> v ,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i &lt;G.vexnum;i++)&#123;</span><br><span class="line">        vistted[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tag[MAX] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    DFS(G,v,<span class="number">0</span>,k,tag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(MGraph G,<span class="keyword">int</span> v <span class="keyword">int</span> j,<span class="keyword">int</span> k, <span class="keyword">int</span> tag[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(j&gt;<span class="number">0</span> &amp;&amp; j &lt;= k &amp;&amp; tag[v] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,v);</span><br><span class="line">        tag[v] = <span class="number">1</span>;</span><br><span class="line">        vistted[v] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> w = FirstAdjVex(G,v);w&gt;=<span class="number">0</span>;w = NextAdjVex(G,w,v))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vistted[w])&#123;</span><br><span class="line">            DFS(G,w,j+<span class="number">1</span>,k,tag);    </span><br><span class="line">        &#125;</span><br><span class="line">        vistted[v] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/01/26/hello-world/"/>
      <url>/2019/01/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
